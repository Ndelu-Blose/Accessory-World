@{
    ViewData["Title"] = "Trade-in Management";
}

<style>
    .admin-container {
        background-color: #f8f9fa;
        min-height: 100vh;
        padding: 20px 0;
    }
    
    .admin-sidebar {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .admin-sidebar .card-header {
        background: rgba(255, 255, 255, 0.1);
        border: none;
        color: white;
    }
    
    .admin-sidebar .list-group-item {
        background: transparent;
        border: none;
        color: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
    }
    
    .admin-sidebar .list-group-item:hover,
    .admin-sidebar .list-group-item.active {
        background: rgba(255, 255, 255, 0.2);
        color: white;
        transform: translateX(5px);
    }
    
    .main-content {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 30px;
    }
    
    .page-header {
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 20px;
        margin-bottom: 30px;
    }
    
    .stats-card {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        border-radius: 10px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }
    
    .stats-card:hover {
        transform: translateY(-5px);
    }
    
    .stats-card.pending {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
    }
    
    .stats-card.completed {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }
    
    .stats-card.rejected {
        background: linear-gradient(135deg, #dc3545 0%, #e83e8c 100%);
    }
    
    .stats-card.credit-value {
        background: linear-gradient(135deg, #6f42c1 0%, #e83e8c 100%);
    }
    
    .filter-section {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .tradein-table {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .table th {
        background: #495057;
        color: white;
        border: none;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
    }
    
    .table td {
        vertical-align: middle;
        border-color: #e9ecef;
    }
    
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .status-submitted { background: #fff3cd; color: #856404; }
    .status-awaiting_evaluation { background: #cce5ff; color: #004085; }
    .status-evaluated { background: #d4edda; color: #155724; }
    .status-offer_sent { background: #d1ecf1; color: #0c5460; }
    .status-accepted { background: #d4edda; color: #155724; }
    .status-rejected { background: #f8d7da; color: #721c24; }
    .status-expired { background: #e2e3e5; color: #6c757d; }
    .status-credit_issued { background: #e7e3ff; color: #6f42c1; }
    
    .action-btn {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.8rem;
        margin: 2px;
        transition: all 0.3s ease;
    }
    
    .btn-view { background: #17a2b8; color: white; }
    .btn-view:hover { background: #138496; color: white; }
    
    .btn-evaluate { background: #28a745; color: white; }
    .btn-evaluate:hover { background: #218838; color: white; }
    
    .btn-edit { background: #ffc107; color: #212529; }
    .btn-edit:hover { background: #e0a800; color: #212529; }
    
    .device-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .device-icon {
        width: 40px;
        height: 40px;
        background: #f8f9fa;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        color: #6c757d;
    }
    
    .modal-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-bottom: none;
    }
    
    .modal-header .btn-close {
        filter: invert(1);
    }
    
    .evaluation-form .form-label {
        font-weight: 600;
        color: #495057;
    }
    
    .condition-rating {
        display: flex;
        gap: 10px;
        align-items: center;
    }
    
    .condition-option {
        flex: 1;
        text-align: center;
        padding: 10px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .condition-option.selected {
        border-color: #007bff;
        background: #e7f3ff;
    }
    
    .image-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 15px;
        margin-top: 15px;
    }
    
    .image-item {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .image-item img {
        width: 100%;
        height: 120px;
        object-fit: cover;
    }
    
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .image-item:hover .image-overlay {
        opacity: 1;
    }
    
    .pagination {
        justify-content: center;
        margin-top: 30px;
    }
</style>

<div class="admin-container">
    <div class="container-fluid">
        <div class="row">
            <!-- Admin Navigation Sidebar -->
            <div class="col-md-2">
                <div class="card admin-sidebar">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-cogs me-2"></i>Admin Panel</h5>
                    </div>
                    <div class="list-group list-group-flush">
                        <a href="@Url.Action("Dashboard", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                        </a>
                        <a href="@Url.Action("Orders", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-shopping-cart me-2"></i>Orders
                        </a>
                        <a href="@Url.Action("Products", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-box me-2"></i>Products
                        </a>
                        <a href="@Url.Action("Users", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-users me-2"></i>Users
                        </a>
                        <a href="@Url.Action("TradeInManagement", "Admin")" class="list-group-item list-group-item-action active">
                            <i class="fas fa-exchange-alt me-2"></i>Trade-ins
                        </a>
                        <a href="@Url.Action("Inventory", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-warehouse me-2"></i>Inventory
                        </a>
                        <a href="@Url.Action("Reports", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-chart-bar me-2"></i>Reports
                        </a>
                        <a href="@Url.Action("Settings", "Admin")" class="list-group-item list-group-item-action">
                            <i class="fas fa-cog me-2"></i>Settings
                        </a>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-10">
                <div class="main-content">
                    <!-- Page Header -->
                    <div class="page-header d-flex justify-content-between align-items-center">
                        <div>
                            <h2><i class="fas fa-exchange-alt me-2"></i>Trade-in Management</h2>
                            <p class="text-muted mb-0">Manage trade-in cases, evaluations, and credit notes</p>
                        </div>
                        <div>
                            <button class="btn btn-success" onclick="bulkEvaluate()">
                                <i class="fas fa-tasks me-2"></i>Bulk Evaluate
                            </button>
                            <button class="btn btn-primary" onclick="exportTradeIns()">
                                <i class="fas fa-download me-2"></i>Export Data
                            </button>
                        </div>
                    </div>

                    <!-- Statistics Cards -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="stats-card pending">
                                <h3 id="pendingCount">0</h3>
                                <p class="mb-0">Pending Evaluation</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stats-card completed">
                                <h3 id="completedCount">0</h3>
                                <p class="mb-0">Completed</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stats-card rejected">
                                <h3 id="rejectedCount">0</h3>
                                <p class="mb-0">Rejected</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="stats-card credit-value">
                                <h3 id="totalCreditValue">R 0</h3>
                                <p class="mb-0">Total Credit Value</p>
                            </div>
                        </div>
                    </div>

                    <!-- Filter Section -->
                    <div class="filter-section">
                        <div class="row">
                            <div class="col-md-3">
                                <label class="form-label">Search</label>
                                <input type="text" class="form-control" id="searchInput" placeholder="Case number, IMEI, customer...">
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Status</label>
                                <select class="form-select" id="statusFilter">
                                    <option value="">All Status</option>
                                    <option value="SUBMITTED">Submitted</option>
                                    <option value="AWAITING_EVALUATION">Awaiting Evaluation</option>
                                    <option value="EVALUATED">Evaluated</option>
                                    <option value="OFFER_SENT">Offer Sent</option>
                                    <option value="ACCEPTED">Accepted</option>
                                    <option value="REJECTED">Rejected</option>
                                    <option value="EXPIRED">Expired</option>
                                    <option value="CREDIT_ISSUED">Credit Issued</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Brand</label>
                                <select class="form-select" id="brandFilter">
                                    <option value="">All Brands</option>
                                    <option value="Apple">Apple</option>
                                    <option value="Samsung">Samsung</option>
                                    <option value="Huawei">Huawei</option>
                                    <option value="Xiaomi">Xiaomi</option>
                                    <option value="OnePlus">OnePlus</option>
                                    <option value="Google">Google</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="startDate">
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">End Date</label>
                                <input type="date" class="form-control" id="endDate">
                            </div>
                            <div class="col-md-1 d-flex align-items-end">
                                <button class="btn btn-primary w-100" onclick="filterTradeIns()">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Trade-ins Table -->
                    <div class="tradein-table">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="tradeInsTable">
                                <thead>
                                    <tr>
                                        <th>
                                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                                        </th>
                                        <th>Case #</th>
                                        <th>Customer</th>
                                        <th>Device</th>
                                        <th>Submitted</th>
                                        <th>Status</th>
                                        <th>Estimated Value</th>
                                        <th>Final Offer</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="tradeInsTableBody">
                                    <!-- Trade-in data will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Pagination -->
                    <nav aria-label="Trade-ins pagination" id="paginationContainer">
                        <!-- Pagination will be loaded here -->
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Trade-in Details Modal -->
<div class="modal fade" id="tradeInDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-exchange-alt me-2"></i>Trade-in Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="tradeInDetailsContent">
                <!-- Details content will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Evaluation Modal -->
<div class="modal fade" id="evaluationModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-clipboard-check me-2"></i>Device Evaluation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="evaluationForm" class="evaluation-form">
                    <input type="hidden" id="evaluationCaseId">
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Overall Condition</label>
                            <div class="condition-rating">
                                <div class="condition-option" data-condition="EXCELLENT">
                                    <i class="fas fa-star text-success"></i>
                                    <div>Excellent</div>
                                    <small>Like new</small>
                                </div>
                                <div class="condition-option" data-condition="GOOD">
                                    <i class="fas fa-thumbs-up text-primary"></i>
                                    <div>Good</div>
                                    <small>Minor wear</small>
                                </div>
                                <div class="condition-option" data-condition="FAIR">
                                    <i class="fas fa-exclamation-triangle text-warning"></i>
                                    <div>Fair</div>
                                    <small>Visible wear</small>
                                </div>
                                <div class="condition-option" data-condition="POOR">
                                    <i class="fas fa-times-circle text-danger"></i>
                                    <div>Poor</div>
                                    <small>Heavy damage</small>
                                </div>
                            </div>
                            <input type="hidden" id="overallCondition" name="overallCondition">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Screen Condition</label>
                            <select class="form-select" id="screenCondition" name="screenCondition" required>
                                <option value="">Select condition</option>
                                <option value="PERFECT">Perfect - No scratches</option>
                                <option value="MINOR_SCRATCHES">Minor scratches</option>
                                <option value="VISIBLE_SCRATCHES">Visible scratches</option>
                                <option value="CRACKED">Cracked</option>
                                <option value="SHATTERED">Shattered</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Battery Health (%)</label>
                            <input type="number" class="form-control" id="batteryHealth" name="batteryHealth" min="0" max="100" placeholder="85">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Functional Issues</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="hasWaterDamage" name="functionalIssues" value="WATER_DAMAGE">
                                <label class="form-check-label" for="hasWaterDamage">Water damage</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="hasButtonIssues" name="functionalIssues" value="BUTTON_ISSUES">
                                <label class="form-check-label" for="hasButtonIssues">Button issues</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="hasCameraIssues" name="functionalIssues" value="CAMERA_ISSUES">
                                <label class="form-check-label" for="hasCameraIssues">Camera issues</label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Base Value (R)</label>
                            <input type="number" class="form-control" id="baseValue" name="baseValue" step="0.01" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Accessory Bonus (R)</label>
                            <input type="number" class="form-control" id="accessoryBonus" name="accessoryBonus" step="0.01" value="0">
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Evaluation Notes</label>
                        <textarea class="form-control" id="evaluationNotes" name="evaluationNotes" rows="3" placeholder="Additional notes about the device condition..."></textarea>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Final Offer Amount (R)</label>
                            <input type="number" class="form-control" id="finalOfferAmount" name="finalOfferAmount" step="0.01" required readonly>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Offer Valid Until</label>
                            <input type="datetime-local" class="form-control" id="offerValidUntil" name="offerValidUntil" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="saveEvaluation()">
                    <i class="fas fa-save me-1"></i>Save Evaluation
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let currentPage = 1;
    let selectedTradeIns = [];

    $(document).ready(function() {
        loadTradeIns();
        loadStatistics();
        
        // Auto-filter on input change
        $('#searchInput').on('input', debounce(filterTradeIns, 500));
        $('#statusFilter, #brandFilter').on('change', filterTradeIns);
        $('#startDate, #endDate').on('change', filterTradeIns);
        
        // Set default offer valid until (7 days from now)
        const defaultDate = new Date();
        defaultDate.setDate(defaultDate.getDate() + 7);
        $('#offerValidUntil').val(defaultDate.toISOString().slice(0, 16));
        
        // Auto-calculate final offer
        $('#baseValue, #accessoryBonus').on('input', calculateFinalOffer);
        
        // Condition selection
        $('.condition-option').on('click', function() {
            $('.condition-option').removeClass('selected');
            $(this).addClass('selected');
            $('#overallCondition').val($(this).data('condition'));
            calculateFinalOffer();
        });
    });

    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    function loadTradeIns(page = 1) {
        currentPage = page;
        const search = $('#searchInput').val();
        const status = $('#statusFilter').val();
        const brand = $('#brandFilter').val();
        const startDate = $('#startDate').val();
        const endDate = $('#endDate').val();

        $.ajax({
            url: '/Admin/GetTradeIns',
            method: 'GET',
            data: {
                search: search,
                status: status,
                brand: brand,
                startDate: startDate,
                endDate: endDate,
                page: page,
                pageSize: 20
            },
            success: function(response) {
                if (response.success) {
                    displayTradeIns(response.tradeIns);
                    displayPagination(response.totalPages, page);
                } else {
                    showNotification('Error loading trade-ins: ' + response.message, 'error');
                }
            },
            error: function() {
                showNotification('Error loading trade-ins', 'error');
            }
        });
    }

    function loadStatistics() {
        $.ajax({
            url: '/Admin/GetTradeInStatistics',
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    $('#pendingCount').text(response.pendingCount);
                    $('#completedCount').text(response.completedCount);
                    $('#rejectedCount').text(response.rejectedCount);
                    $('#totalCreditValue').text('R ' + response.totalCreditValue.toFixed(2));
                }
            }
        });
    }

    function displayTradeIns(tradeIns) {
        const tbody = $('#tradeInsTableBody');
        tbody.empty();

        if (tradeIns.length === 0) {
            tbody.append(`
                <tr>
                    <td colspan="9" class="text-center py-4">
                        <div class="text-muted">
                            <i class="fas fa-exchange-alt fa-3x mb-3"></i>
                            <h5>No Trade-ins Found</h5>
                            <p>No trade-in cases match your current filters.</p>
                        </div>
                    </td>
                </tr>
            `);
            return;
        }

        tradeIns.forEach(tradeIn => {
            const row = `
                <tr>
                    <td>
                        <input type="checkbox" class="trade-in-checkbox" value="${tradeIn.id}" onchange="updateSelection()">
                    </td>
                    <td>
                        <strong>${tradeIn.caseNumber}</strong>
                    </td>
                    <td>
                        <div>
                            <strong>${tradeIn.customerName}</strong>
                            <br><small class="text-muted">${tradeIn.customerEmail}</small>
                        </div>
                    </td>
                    <td>
                        <div class="device-info">
                            <div class="device-icon">
                                <i class="fas fa-mobile-alt"></i>
                            </div>
                            <div>
                                <strong>${tradeIn.brand} ${tradeIn.model}</strong>
                                <br><small class="text-muted">${tradeIn.storage} | ${tradeIn.color}</small>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div>${new Date(tradeIn.createdAt).toLocaleDateString()}</div>
                        <small class="text-muted">${new Date(tradeIn.createdAt).toLocaleTimeString()}</small>
                    </td>
                    <td>
                        <span class="status-badge status-${tradeIn.status.toLowerCase()}">${tradeIn.status.replace('_', ' ')}</span>
                    </td>
                    <td>
                        ${tradeIn.estimatedValue ? 'R ' + tradeIn.estimatedValue.toFixed(2) : '-'}
                    </td>
                    <td>
                        ${tradeIn.finalOfferAmount ? 'R ' + tradeIn.finalOfferAmount.toFixed(2) : '-'}
                    </td>
                    <td>
                        <button class="btn btn-sm action-btn btn-view" onclick="viewTradeInDetails(${tradeIn.id})" title="View Details">
                            <i class="fas fa-eye"></i>
                        </button>
                        ${tradeIn.status === 'SUBMITTED' || tradeIn.status === 'AWAITING_EVALUATION' ? 
                            `<button class="btn btn-sm action-btn btn-evaluate" onclick="evaluateTradeIn(${tradeIn.id})" title="Evaluate">
                                <i class="fas fa-clipboard-check"></i>
                            </button>` : ''}
                        ${tradeIn.status === 'EVALUATED' || tradeIn.status === 'OFFER_SENT' ? 
                            `<button class="btn btn-sm action-btn btn-edit" onclick="editEvaluation(${tradeIn.id})" title="Edit Evaluation">
                                <i class="fas fa-edit"></i>
                            </button>` : ''}
                    </td>
                </tr>
            `;
            tbody.append(row);
        });
    }

    function displayPagination(totalPages, currentPage) {
        if (totalPages <= 1) {
            $('#paginationContainer').empty();
            return;
        }

        let paginationHtml = '<ul class="pagination">';
        
        // Previous button
        if (currentPage > 1) {
            paginationHtml += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="loadTradeIns(${currentPage - 1})"><i class="fas fa-chevron-left"></i></a></li>`;
        }
        
        // Page numbers
        for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) {
            paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}"><a class="page-link" href="javascript:void(0)" onclick="loadTradeIns(${i})">${i}</a></li>`;
        }
        
        // Next button
        if (currentPage < totalPages) {
            paginationHtml += `<li class="page-item"><a class="page-link" href="javascript:void(0)" onclick="loadTradeIns(${currentPage + 1})"><i class="fas fa-chevron-right"></i></a></li>`;
        }
        
        paginationHtml += '</ul>';
        $('#paginationContainer').html(paginationHtml);
    }

    function filterTradeIns() {
        loadTradeIns(1);
    }

    function viewTradeInDetails(tradeInId) {
        $.ajax({
            url: `/Admin/GetTradeInDetails/${tradeInId}`,
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    displayTradeInDetails(response.tradeIn);
                    $('#tradeInDetailsModal').modal('show');
                } else {
                    showNotification('Error loading trade-in details: ' + response.message, 'error');
                }
            },
            error: function() {
                showNotification('Error loading trade-in details', 'error');
            }
        });
    }

    function displayTradeInDetails(tradeIn) {
        const content = `
            <div class="row">
                <div class="col-md-6">
                    <h6>Customer Information</h6>
                    <p><strong>Name:</strong> ${tradeIn.customerName}</p>
                    <p><strong>Email:</strong> ${tradeIn.customerEmail}</p>
                    <p><strong>Phone:</strong> ${tradeIn.customerPhone || 'Not provided'}</p>
                    
                    <h6 class="mt-4">Device Information</h6>
                    <p><strong>Brand:</strong> ${tradeIn.brand}</p>
                    <p><strong>Model:</strong> ${tradeIn.model}</p>
                    <p><strong>Storage:</strong> ${tradeIn.storage}</p>
                    <p><strong>Color:</strong> ${tradeIn.color}</p>
                    <p><strong>IMEI:</strong> ${tradeIn.imei}</p>
                    <p><strong>Condition:</strong> ${tradeIn.condition}</p>
                </div>
                <div class="col-md-6">
                    <h6>Case Information</h6>
                    <p><strong>Case Number:</strong> ${tradeIn.caseNumber}</p>
                    <p><strong>Status:</strong> <span class="status-badge status-${tradeIn.status.toLowerCase()}">${tradeIn.status.replace('_', ' ')}</span></p>
                    <p><strong>Submitted:</strong> ${new Date(tradeIn.createdAt).toLocaleString()}</p>
                    <p><strong>Last Updated:</strong> ${new Date(tradeIn.updatedAt).toLocaleString()}</p>
                    
                    ${tradeIn.evaluation ? `
                        <h6 class="mt-4">Evaluation</h6>
                        <p><strong>Evaluated By:</strong> ${tradeIn.evaluation.evaluatedByName}</p>
                        <p><strong>Overall Condition:</strong> ${tradeIn.evaluation.overallCondition}</p>
                        <p><strong>Screen Condition:</strong> ${tradeIn.evaluation.screenCondition}</p>
                        <p><strong>Battery Health:</strong> ${tradeIn.evaluation.batteryHealth}%</p>
                        <p><strong>Base Value:</strong> R ${tradeIn.evaluation.baseValue.toFixed(2)}</p>
                        <p><strong>Final Offer:</strong> R ${tradeIn.evaluation.finalOfferAmount.toFixed(2)}</p>
                        ${tradeIn.evaluation.notes ? `<p><strong>Notes:</strong> ${tradeIn.evaluation.notes}</p>` : ''}
                    ` : ''}
                </div>
            </div>
            
            ${tradeIn.images && tradeIn.images.length > 0 ? `
                <div class="mt-4">
                    <h6>Device Images</h6>
                    <div class="image-gallery">
                        ${tradeIn.images.map(img => `
                            <div class="image-item">
                                <img src="${img.imageUrl}" alt="Device image">
                                <div class="image-overlay">
                                    <button class="btn btn-sm btn-light" onclick="window.open('${img.imageUrl}', '_blank')">
                                        <i class="fas fa-expand"></i>
                                    </button>
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            ` : ''}
        `;
        
        $('#tradeInDetailsContent').html(content);
    }

    function evaluateTradeIn(tradeInId) {
        $('#evaluationCaseId').val(tradeInId);
        $('#evaluationForm')[0].reset();
        $('.condition-option').removeClass('selected');
        
        // Set default offer valid until (7 days from now)
        const defaultDate = new Date();
        defaultDate.setDate(defaultDate.getDate() + 7);
        $('#offerValidUntil').val(defaultDate.toISOString().slice(0, 16));
        
        $('#evaluationModal').modal('show');
    }

    function editEvaluation(tradeInId) {
        $.ajax({
            url: `/Admin/GetTradeInEvaluation/${tradeInId}`,
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    populateEvaluationForm(response.evaluation);
                    $('#evaluationCaseId').val(tradeInId);
                    $('#evaluationModal').modal('show');
                } else {
                    showNotification('Error loading evaluation: ' + response.message, 'error');
                }
            },
            error: function() {
                showNotification('Error loading evaluation', 'error');
            }
        });
    }

    function populateEvaluationForm(evaluation) {
        $('#overallCondition').val(evaluation.overallCondition);
        $(`.condition-option[data-condition="${evaluation.overallCondition}"]`).addClass('selected');
        $('#screenCondition').val(evaluation.screenCondition);
        $('#batteryHealth').val(evaluation.batteryHealth);
        $('#baseValue').val(evaluation.baseValue);
        $('#accessoryBonus').val(evaluation.accessoryBonus);
        $('#evaluationNotes').val(evaluation.notes);
        $('#finalOfferAmount').val(evaluation.finalOfferAmount);
        $('#offerValidUntil').val(new Date(evaluation.offerValidUntil).toISOString().slice(0, 16));
        
        // Set functional issues checkboxes
        if (evaluation.functionalIssues) {
            evaluation.functionalIssues.forEach(issue => {
                $(`input[name="functionalIssues"][value="${issue}"]`).prop('checked', true);
            });
        }
    }

    function calculateFinalOffer() {
        const baseValue = parseFloat($('#baseValue').val()) || 0;
        const accessoryBonus = parseFloat($('#accessoryBonus').val()) || 0;
        const condition = $('#overallCondition').val();
        
        let conditionMultiplier = 1.0;
        switch (condition) {
            case 'EXCELLENT': conditionMultiplier = 1.0; break;
            case 'GOOD': conditionMultiplier = 0.85; break;
            case 'FAIR': conditionMultiplier = 0.65; break;
            case 'POOR': conditionMultiplier = 0.4; break;
        }
        
        const finalOffer = (baseValue * conditionMultiplier) + accessoryBonus;
        $('#finalOfferAmount').val(finalOffer.toFixed(2));
    }

    function saveEvaluation() {
        const form = $('#evaluationForm');
        if (!form[0].checkValidity()) {
            form[0].reportValidity();
            return;
        }
        
        const functionalIssues = [];
        $('input[name="functionalIssues"]:checked').each(function() {
            functionalIssues.push($(this).val());
        });
        
        const evaluationData = {
            tradeInCaseId: $('#evaluationCaseId').val(),
            overallCondition: $('#overallCondition').val(),
            screenCondition: $('#screenCondition').val(),
            batteryHealth: $('#batteryHealth').val(),
            functionalIssues: functionalIssues,
            baseValue: $('#baseValue').val(),
            accessoryBonus: $('#accessoryBonus').val(),
            notes: $('#evaluationNotes').val(),
            finalOfferAmount: $('#finalOfferAmount').val(),
            offerValidUntil: $('#offerValidUntil').val()
        };
        
        $.ajax({
            url: '/Admin/SaveTradeInEvaluation',
            method: 'POST',
            data: evaluationData,
            success: function(response) {
                if (response.success) {
                    showNotification('Evaluation saved successfully', 'success');
                    $('#evaluationModal').modal('hide');
                    loadTradeIns(currentPage);
                    loadStatistics();
                } else {
                    showNotification('Error saving evaluation: ' + response.message, 'error');
                }
            },
            error: function() {
                showNotification('Error saving evaluation', 'error');
            }
        });
    }

    function toggleSelectAll() {
        const selectAll = $('#selectAll').prop('checked');
        $('.trade-in-checkbox').prop('checked', selectAll);
        updateSelection();
    }

    function updateSelection() {
        selectedTradeIns = [];
        $('.trade-in-checkbox:checked').each(function() {
            selectedTradeIns.push($(this).val());
        });
        
        const allChecked = $('.trade-in-checkbox').length === $('.trade-in-checkbox:checked').length;
        $('#selectAll').prop('checked', allChecked);
    }

    function bulkEvaluate() {
        if (selectedTradeIns.length === 0) {
            showNotification('Please select trade-ins to evaluate', 'warning');
            return;
        }
        
        // Implementation for bulk evaluation
        showNotification('Bulk evaluation feature coming soon', 'info');
    }

    function exportTradeIns() {
        const search = $('#searchInput').val();
        const status = $('#statusFilter').val();
        const brand = $('#brandFilter').val();
        const startDate = $('#startDate').val();
        const endDate = $('#endDate').val();
        
        const params = new URLSearchParams({
            search: search,
            status: status,
            brand: brand,
            startDate: startDate,
            endDate: endDate
        });
        
        window.location.href = `/Admin/ExportTradeIns?${params.toString()}`;
    }

    function showNotification(message, type) {
        // Implementation for showing notifications
        const alertClass = type === 'success' ? 'alert-success' : 
                          type === 'error' ? 'alert-danger' : 
                          type === 'warning' ? 'alert-warning' : 'alert-info';
        
        const notification = `
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 9999;" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;
        
        $('body').append(notification);
        
        setTimeout(() => {
            $('.alert').alert('close');
        }, 5000);
    }
</script>