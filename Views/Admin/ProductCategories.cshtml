@model AccessoryWorld.ViewModels.ProductCategoriesViewModel
@{
    ViewData["Title"] = "Product Categories";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Product Categories</h4>
                    <div>
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                            <i class="fas fa-plus"></i> Add Category
                        </button>
                        <button type="button" class="btn btn-info" onclick="toggleView()">
                            <i class="fas fa-list" id="viewToggleIcon"></i> <span id="viewToggleText">Tree View</span>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Category Statistics -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="card bg-primary text-white">
                                <div class="card-body text-center">
                                    <h3 class="mb-0" id="totalCategories">@Model.TotalCategories</h3>
                                    <small>Total Categories</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-success text-white">
                                <div class="card-body text-center">
                                    <h3 class="mb-0" id="activeCategories">@Model.ActiveCategories</h3>
                                    <small>Active Categories</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-info text-white">
                                <div class="card-body text-center">
                                    <h3 class="mb-0" id="parentCategories">@Model.ParentCategories</h3>
                                    <small>Parent Categories</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="card bg-warning text-white">
                                <div class="card-body text-center">
                                    <h3 class="mb-0" id="emptyCategories">@Model.EmptyCategories</h3>
                                    <small>Empty Categories</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Search and Filter -->
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <div class="input-group">
                                <input type="text" id="searchCategories" class="form-control" placeholder="Search categories...">
                                <button class="btn btn-outline-secondary" type="button" onclick="searchCategories()">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <select id="statusFilter" class="form-select">
                                <option value="">All Status</option>
                                <option value="active">Active</option>
                                <option value="inactive">Inactive</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select id="typeFilter" class="form-select">
                                <option value="">All Types</option>
                                <option value="parent">Parent Only</option>
                                <option value="child">Child Only</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select id="sortBy" class="form-select">
                                <option value="name">Sort by Name</option>
                                <option value="products">Sort by Products</option>
                                <option value="created">Sort by Created</option>
                                <option value="order">Sort by Order</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary" onclick="applyFilters()">
                                <i class="fas fa-filter"></i> Filter
                            </button>
                        </div>
                    </div>

                    <!-- Categories Display -->
                    <div id="categoriesContainer">
                        <!-- List View -->
                        <div id="listView" class="table-responsive">
                            <table class="table table-striped" id="categoriesTable">
                                <thead>
                                    <tr>
                                        <th width="5%">
                                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                                        </th>
                                        <th width="5%">Order</th>
                                        <th width="25%">Category Name</th>
                                        <th width="15%">Parent Category</th>
                                        <th width="10%">Products</th>
                                        <th width="10%">Status</th>
                                        <th width="15%">Created</th>
                                        <th width="15%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="categoriesTableBody">
                                    <!-- Categories will be loaded here -->
                                </tbody>
                            </table>
                        </div>

                        <!-- Tree View -->
                        <div id="treeView" style="display: none;">
                            <div id="categoryTree" class="category-tree">
                                <!-- Tree structure will be loaded here -->
                            </div>
                        </div>
                    </div>

                    <!-- Bulk Actions -->
                    <div class="row mt-3" id="bulkActions" style="display: none;">
                        <div class="col-12">
                            <div class="alert alert-info">
                                <span id="selectedCount">0</span> categories selected
                                <div class="float-end">
                                    <button type="button" class="btn btn-sm btn-success" onclick="bulkActivate()">
                                        <i class="fas fa-check"></i> Activate
                                    </button>
                                    <button type="button" class="btn btn-sm btn-warning" onclick="bulkDeactivate()">
                                        <i class="fas fa-times"></i> Deactivate
                                    </button>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="bulkDelete()">
                                        <i class="fas fa-trash"></i> Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Pagination -->
                    <nav aria-label="Categories pagination">
                        <ul class="pagination justify-content-center" id="categoriesPagination">
                            <!-- Pagination will be generated here -->
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="categoryName" class="form-label">Category Name *</label>
                                <input type="text" id="categoryName" class="form-control" placeholder="Enter category name" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="categorySlug" class="form-label">URL Slug</label>
                                <input type="text" id="categorySlug" class="form-control" placeholder="auto-generated" readonly>
                                <small class="text-muted">Auto-generated from category name</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="parentCategory" class="form-label">Parent Category</label>
                                <select id="parentCategory" class="form-select">
                                    <option value="">No Parent (Root Category)</option>
                                    <!-- Parent categories will be loaded here -->
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="categoryOrder" class="form-label">Display Order</label>
                                <input type="number" id="categoryOrder" class="form-control" value="0" min="0">
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label for="categoryDescription" class="form-label">Description</label>
                        <textarea id="categoryDescription" class="form-control" rows="3" placeholder="Enter category description"></textarea>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="categoryImage" class="form-label">Category Image</label>
                                <input type="file" id="categoryImage" class="form-control" accept="image/*">
                                <small class="text-muted">Recommended size: 300x300px</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="categoryIcon" class="form-label">Icon Class</label>
                                <input type="text" id="categoryIcon" class="form-control" placeholder="fas fa-gamepad">
                                <small class="text-muted">FontAwesome icon class</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input type="checkbox" id="categoryActive" class="form-check-input" checked>
                                <label for="categoryActive" class="form-check-label">Active</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input type="checkbox" id="categoryFeatured" class="form-check-input">
                                <label for="categoryFeatured" class="form-check-label">Featured Category</label>
                            </div>
                        </div>
                    </div>
                    
                    <!-- SEO Settings -->
                    <div class="card mt-3">
                        <div class="card-header">
                            <h6 class="mb-0">SEO Settings</h6>
                        </div>
                        <div class="card-body">
                            <div class="form-group mb-3">
                                <label for="metaTitle" class="form-label">Meta Title</label>
                                <input type="text" id="metaTitle" class="form-control" placeholder="SEO title">
                                <small class="text-muted">Recommended: 50-60 characters</small>
                            </div>
                            <div class="form-group mb-3">
                                <label for="metaDescription" class="form-label">Meta Description</label>
                                <textarea id="metaDescription" class="form-control" rows="2" placeholder="SEO description"></textarea>
                                <small class="text-muted">Recommended: 150-160 characters</small>
                            </div>
                            <div class="form-group mb-3">
                                <label for="metaKeywords" class="form-label">Meta Keywords</label>
                                <input type="text" id="metaKeywords" class="form-control" placeholder="keyword1, keyword2, keyword3">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveCategory()">
                    <i class="fas fa-save"></i> Save Category
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="editCategoryContent">
                <!-- Edit form will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateCategory()">
                    <i class="fas fa-save"></i> Update Category
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action will also affect all subcategories and products in this category.
                </div>
                <div id="deleteOptions">
                    <div class="form-check">
                        <input type="radio" id="moveProducts" name="deleteAction" value="move" class="form-check-input" checked>
                        <label for="moveProducts" class="form-check-label">Move products to parent category</label>
                    </div>
                    <div class="form-check">
                        <input type="radio" id="deleteProducts" name="deleteAction" value="delete" class="form-check-input">
                        <label for="deleteProducts" class="form-check-label">Delete all products in this category</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDeleteCategory()">
                    <i class="fas fa-trash"></i> Delete Category
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentView = 'list';
        let selectedCategories = [];
        let currentPage = 1;
        let pageSize = 10;

        $(document).ready(function() {
            loadCategories();
            loadParentCategories();
            setupEventHandlers();
        });

        function setupEventHandlers() {
            $('#categoryName').on('input', function() {
                const slug = generateSlug($(this).val());
                $('#categorySlug').val(slug);
            });

            $('#searchCategories').on('keypress', function(e) {
                if (e.which === 13) {
                    searchCategories();
                }
            });
        }

        function generateSlug(text) {
            return text.toLowerCase()
                .replace(/[^\w\s-]/g, '')
                .replace(/[\s_-]+/g, '-')
                .replace(/^-+|-+$/g, '');
        }

        function loadCategories(page = 1) {
            currentPage = page;
            const filters = {
                search: $('#searchCategories').val(),
                status: $('#statusFilter').val(),
                type: $('#typeFilter').val(),
                sortBy: $('#sortBy').val(),
                page: page,
                pageSize: pageSize
            };

            $.ajax({
                url: '/Admin/GetCategories',
                type: 'GET',
                data: filters,
                success: function(response) {
                    if (response.success) {
                        if (currentView === 'list') {
                            displayCategoriesList(response.data.categories);
                            updatePagination(response.data.totalPages, response.data.currentPage);
                        } else {
                            displayCategoriesTree(response.data.categories);
                        }
                        updateStatistics(response.data.statistics);
                    } else {
                        toastr.error('Failed to load categories');
                    }
                },
                error: function() {
                    toastr.error('An error occurred while loading categories');
                }
            });
        }

        function displayCategoriesList(categories) {
            const tbody = $('#categoriesTableBody');
            tbody.empty();

            if (categories.length === 0) {
                tbody.append(`
                    <tr>
                        <td colspan="8" class="text-center text-muted py-4">
                            <i class="fas fa-folder-open fa-2x mb-2"></i><br>
                            No categories found
                        </td>
                    </tr>
                `);
                return;
            }

            categories.forEach(function(category) {
                const statusBadge = category.isActive 
                    ? '<span class="badge bg-success">Active</span>' 
                    : '<span class="badge bg-secondary">Inactive</span>';
                
                const parentName = category.parentName || '-';
                const productCount = category.productCount || 0;
                
                const row = `
                    <tr>
                        <td>
                            <input type="checkbox" class="category-checkbox" value="${category.id}" onchange="updateSelection()">
                        </td>
                        <td>
                            <input type="number" class="form-control form-control-sm" value="${category.displayOrder}" 
                                   onchange="updateCategoryOrder(${category.id}, this.value)" style="width: 70px;">
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                ${category.icon ? `<i class="${category.icon} me-2"></i>` : ''}
                                <div>
                                    <strong>${category.name}</strong>
                                    ${category.isFeatured ? '<span class="badge bg-warning ms-2">Featured</span>' : ''}
                                    <br><small class="text-muted">${category.slug}</small>
                                </div>
                            </div>
                        </td>
                        <td>${parentName}</td>
                        <td class="text-center">
                            <span class="badge bg-info">${productCount}</span>
                        </td>
                        <td>${statusBadge}</td>
                        <td>${formatDate(category.createdAt)}</td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <button type="button" class="btn btn-outline-info" onclick="viewCategory(${category.id})" title="View">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button type="button" class="btn btn-outline-primary" onclick="editCategory(${category.id})" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button type="button" class="btn btn-outline-danger" onclick="deleteCategory(${category.id})" title="Delete">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        function displayCategoriesTree(categories) {
            const container = $('#categoryTree');
            container.empty();
            
            // Build tree structure
            const tree = buildTree(categories);
            const treeHtml = renderTree(tree);
            container.html(treeHtml);
        }

        function buildTree(categories) {
            const tree = [];
            const lookup = {};
            
            // Create lookup table
            categories.forEach(category => {
                lookup[category.id] = { ...category, children: [] };
            });
            
            // Build tree
            categories.forEach(category => {
                if (category.parentId) {
                    if (lookup[category.parentId]) {
                        lookup[category.parentId].children.push(lookup[category.id]);
                    }
                } else {
                    tree.push(lookup[category.id]);
                }
            });
            
            return tree;
        }

        function renderTree(nodes, level = 0) {
            let html = '<ul class="list-unstyled">';
            
            nodes.forEach(node => {
                const indent = 'margin-left: ' + (level * 20) + 'px';
                const statusBadge = node.isActive 
                    ? '<span class="badge bg-success">Active</span>' 
                    : '<span class="badge bg-secondary">Inactive</span>';
                
                html += `
                    <li class="mb-2" style="${indent}">
                        <div class="card">
                            <div class="card-body py-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        ${node.icon ? `<i class="${node.icon} me-2"></i>` : ''}
                                        <strong>${node.name}</strong>
                                        ${node.isFeatured ? '<span class="badge bg-warning ms-2">Featured</span>' : ''}
                                        <span class="badge bg-info ms-2">${node.productCount || 0} products</span>
                                        ${statusBadge}
                                    </div>
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-outline-info" onclick="viewCategory(${node.id})">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button type="button" class="btn btn-outline-primary" onclick="editCategory(${node.id})">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button" class="btn btn-outline-danger" onclick="deleteCategory(${node.id})">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        ${node.children.length > 0 ? renderTree(node.children, level + 1) : ''}
                    </li>
                `;
            });
            
            html += '</ul>';
            return html;
        }

        function toggleView() {
            if (currentView === 'list') {
                currentView = 'tree';
                $('#listView').hide();
                $('#treeView').show();
                $('#viewToggleIcon').removeClass('fa-list').addClass('fa-sitemap');
                $('#viewToggleText').text('List View');
                loadCategories();
            } else {
                currentView = 'list';
                $('#treeView').hide();
                $('#listView').show();
                $('#viewToggleIcon').removeClass('fa-sitemap').addClass('fa-list');
                $('#viewToggleText').text('Tree View');
                loadCategories();
            }
        }

        function loadParentCategories() {
            $.ajax({
                url: '/Admin/GetParentCategories',
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        const select = $('#parentCategory');
                        select.find('option:not(:first)').remove();
                        
                        response.data.forEach(function(category) {
                            select.append(`<option value="${category.id}">${category.name}</option>`);
                        });
                    }
                }
            });
        }

        function saveCategory() {
            const formData = new FormData();
            
            // Add form fields
            formData.append('name', $('#categoryName').val());
            formData.append('slug', $('#categorySlug').val());
            formData.append('parentId', $('#parentCategory').val());
            formData.append('description', $('#categoryDescription').val());
            formData.append('displayOrder', $('#categoryOrder').val());
            formData.append('icon', $('#categoryIcon').val());
            formData.append('isActive', $('#categoryActive').is(':checked'));
            formData.append('isFeatured', $('#categoryFeatured').is(':checked'));
            formData.append('metaTitle', $('#metaTitle').val());
            formData.append('metaDescription', $('#metaDescription').val());
            formData.append('metaKeywords', $('#metaKeywords').val());
            
            // Add image file
            const imageFile = $('#categoryImage')[0].files[0];
            if (imageFile) {
                formData.append('image', imageFile);
            }

            $.ajax({
                url: '/Admin/CreateCategory',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        toastr.success('Category created successfully!');
                        $('#addCategoryModal').modal('hide');
                        loadCategories();
                        loadParentCategories();
                        resetAddForm();
                    } else {
                        toastr.error(response.message || 'Failed to create category');
                    }
                },
                error: function() {
                    toastr.error('An error occurred while creating the category');
                }
            });
        }

        function editCategory(categoryId) {
            $.ajax({
                url: `/Admin/GetCategory/${categoryId}`,
                type: 'GET',
                success: function(response) {
                    if (response.success) {
                        populateEditForm(response.data);
                        $('#editCategoryModal').modal('show');
                    } else {
                        toastr.error('Failed to load category details');
                    }
                },
                error: function() {
                    toastr.error('An error occurred while loading category details');
                }
            });
        }

        function populateEditForm(category) {
            // This would populate the edit form with category data
            // Implementation would be similar to the add form but with existing values
        }

        function updateCategory() {
            // Implementation for updating category
        }

        function deleteCategory(categoryId) {
            // Store category ID for deletion
            $('#deleteCategoryModal').data('categoryId', categoryId);
            $('#deleteCategoryModal').modal('show');
        }

        function confirmDeleteCategory() {
            const categoryId = $('#deleteCategoryModal').data('categoryId');
            const action = $('input[name="deleteAction"]:checked').val();
            
            $.ajax({
                url: `/Admin/DeleteCategory/${categoryId}`,
                type: 'DELETE',
                data: { action: action },
                success: function(response) {
                    if (response.success) {
                        toastr.success('Category deleted successfully!');
                        $('#deleteCategoryModal').modal('hide');
                        loadCategories();
                        loadParentCategories();
                    } else {
                        toastr.error(response.message || 'Failed to delete category');
                    }
                },
                error: function() {
                    toastr.error('An error occurred while deleting the category');
                }
            });
        }

        function updateCategoryOrder(categoryId, newOrder) {
            $.ajax({
                url: '/Admin/UpdateCategoryOrder',
                type: 'POST',
                data: { categoryId: categoryId, displayOrder: newOrder },
                success: function(response) {
                    if (response.success) {
                        toastr.success('Category order updated!');
                    } else {
                        toastr.error('Failed to update category order');
                    }
                }
            });
        }

        function updateSelection() {
            selectedCategories = $('.category-checkbox:checked').map(function() {
                return parseInt($(this).val());
            }).get();
            
            $('#selectedCount').text(selectedCategories.length);
            
            if (selectedCategories.length > 0) {
                $('#bulkActions').show();
            } else {
                $('#bulkActions').hide();
            }
        }

        function toggleSelectAll() {
            const isChecked = $('#selectAll').is(':checked');
            $('.category-checkbox').prop('checked', isChecked);
            updateSelection();
        }

        function bulkActivate() {
            bulkAction('activate');
        }

        function bulkDeactivate() {
            bulkAction('deactivate');
        }

        function bulkDelete() {
            if (confirm('Are you sure you want to delete the selected categories?')) {
                bulkAction('delete');
            }
        }

        function bulkAction(action) {
            $.ajax({
                url: '/Admin/BulkCategoryAction',
                type: 'POST',
                data: { categoryIds: selectedCategories, action: action },
                success: function(response) {
                    if (response.success) {
                        toastr.success(`Categories ${action}d successfully!`);
                        loadCategories();
                        selectedCategories = [];
                        $('#bulkActions').hide();
                        $('#selectAll').prop('checked', false);
                    } else {
                        toastr.error(response.message || `Failed to ${action} categories`);
                    }
                },
                error: function() {
                    toastr.error(`An error occurred while ${action}ing categories`);
                }
            });
        }

        function searchCategories() {
            loadCategories(1);
        }

        function applyFilters() {
            loadCategories(1);
        }

        function resetAddForm() {
            $('#addCategoryForm')[0].reset();
            $('#categoryActive').prop('checked', true);
        }

        function updateStatistics(stats) {
            $('#totalCategories').text(stats.total);
            $('#activeCategories').text(stats.active);
            $('#parentCategories').text(stats.parents);
            $('#emptyCategories').text(stats.empty);
        }

        function updatePagination(totalPages, currentPage) {
            // Implementation similar to other pagination functions
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString();
        }

        function viewCategory(categoryId) {
            window.open(`/Admin/CategoryDetails/${categoryId}`, '_blank');
        }
    </script>
}

<style>
    .category-tree .card {
        border-left: 3px solid #007bff;
        margin-bottom: 5px;
    }
    
    .category-tree .card:hover {
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .form-control-sm {
        font-size: 0.875rem;
    }
</style>