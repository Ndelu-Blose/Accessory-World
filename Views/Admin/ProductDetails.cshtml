@model AccessoryWorld.Models.Product
@{
    ViewData["Title"] = $"Admin - {Model.Name}";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var relatedProducts = ViewBag.RelatedProducts as List<AccessoryWorld.Models.Product>;
    var currentPrice = Model.IsOnSale && Model.SalePrice.HasValue ? Model.SalePrice.Value : Model.Price;
    var originalPrice = Model.Price;
    var totalStock = Model.SKUs.Sum(s => s.StockQuantity);
    var totalValue = Model.SKUs.Sum(s => s.StockQuantity * s.Price);
}

@section Styles {
<style>
    :root {
        --primary: #2563eb;
        --primary-dark: #1d4ed8;
        --accent: #7c3aed;
        --accent-magenta: #d946ef;
        --success: #10b981;
        --warning: #f59e0b;
        --danger: #ef4444;
        --info: #06b6d4;
        --text-dark: #1f2937;
        --text-muted: #6b7280;
        --bg-light: #f8fafc;
        --border: #e5e7eb;
        --border-radius: 12px;
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    .admin-container {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        min-height: 100vh;
        padding: 1.5rem;
    }

    .admin-sidebar {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        position: sticky;
        top: 1.5rem;
        height: fit-content;
        width: 280px;
        min-height: calc(100vh - 3rem);
    }

    .admin-sidebar .sidebar-header {
        background: linear-gradient(135deg, #1399FF, #FF37B9);
        color: white;
        padding: 2rem 1.5rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .admin-sidebar .sidebar-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="%23ffffff" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .admin-sidebar .sidebar-header h5 {
        margin: 0;
        font-weight: 700;
        font-size: 1.25rem;
        position: relative;
        z-index: 1;
        letter-spacing: 0.5px;
    }

    .admin-sidebar .sidebar-header .admin-badge {
        background: rgba(255, 255, 255, 0.2);
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.75rem;
        margin-top: 0.5rem;
        display: inline-block;
        position: relative;
        z-index: 1;
    }

    .admin-nav {
        list-style: none;
        padding: 1rem 0;
        margin: 0;
    }

    .admin-nav-item {
        margin: 0.25rem 0;
    }

    .admin-nav-link {
        display: flex;
        align-items: center;
        padding: 1rem 1.5rem;
        color: #374151;
        text-decoration: none;
        transition: all 0.3s ease;
        font-weight: 500;
        border-radius: 12px;
        margin: 0 1rem;
        position: relative;
    }

    .admin-nav-link:hover {
        background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
        color: #1399FF;
        text-decoration: none;
        transform: translateX(4px);
        box-shadow: 0 4px 12px rgba(19, 153, 255, 0.15);
    }

    .admin-nav-link.active {
        background: linear-gradient(135deg, #1399FF, #FF37B9);
        color: white;
        box-shadow: 0 8px 24px rgba(19, 153, 255, 0.3);
        transform: translateX(4px);
    }

    .admin-nav-link i {
        width: 24px;
        margin-right: 1rem;
        text-align: center;
        font-size: 1.1rem;
    }

    .admin-nav-link span {
        font-size: 0.95rem;
        letter-spacing: 0.25px;
    }

    .dashboard-header {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-md);
        padding: 2rem;
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .dashboard-header h2 {
        margin: 0;
        font-weight: 700;
        color: var(--text-dark);
        font-size: 2rem;
    }

    .dashboard-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-md);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .dashboard-card-header {
        background: linear-gradient(135deg, var(--bg-light), #e2e8f0);
        padding: 1.5rem;
        border-bottom: 1px solid var(--border);
    }

    .dashboard-card-header h5 {
        margin: 0;
        font-weight: 700;
        color: var(--text-dark);
    }

    .dashboard-card-body {
        padding: 1.5rem;
    }

    .product-image {
        max-width: 100%;
        height: 300px;
        object-fit: cover;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-sm);
    }

    .product-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .product-gallery img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-sm);
        transition: transform 0.3s ease;
    }

    .product-gallery img:hover {
        transform: scale(1.05);
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid var(--border);
    }

    .info-item:last-child {
        border-bottom: none;
    }

    .info-label {
        font-weight: 600;
        color: var(--text-dark);
    }

    .info-value {
        color: var(--text-muted);
        text-align: right;
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .badge-success {
        background: var(--success);
        color: white;
    }

    .badge-warning {
        background: var(--warning);
        color: white;
    }

    .badge-danger {
        background: var(--danger);
        color: white;
    }

    .btn-action {
        background: linear-gradient(135deg, var(--primary), var(--accent));
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    .btn-action:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-lg);
        color: white;
        text-decoration: none;
    }

    .btn-secondary {
        background: var(--bg-light);
        color: var(--text-dark);
        border: 1px solid var(--border);
    }

    .btn-secondary:hover {
        background: var(--border);
        color: var(--text-dark);
    }

    /* Modern Card Styles */
    .modern-info-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .modern-info-card:hover {
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
        transform: translateY(-2px);
    }

    .card-header-modern {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .card-header-modern h5 {
        margin: 0;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .header-icon {
        width: 32px;
        height: 32px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem;
    }

    .card-body-modern {
        padding: 1.5rem;
    }

    /* Info Row Styles */
    .info-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .info-card {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        border-left: 4px solid #667eea;
    }

    .info-card .info-label {
        font-size: 0.875rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
        font-weight: 500;
    }

    .info-card .info-value {
        font-size: 1rem;
        font-weight: 600;
        color: #212529;
    }

    /* Pricing Styles */
    .pricing-card .card-header-modern {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .pricing-highlight {
        background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%);
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .current-price-card {
        background: white;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .price-label {
        font-size: 0.875rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .price-value {
        font-size: 2rem;
        font-weight: 700;
        color: #28a745;
        margin-bottom: 0.5rem;
    }

    .original-price {
        font-size: 1.25rem;
        color: #dc3545;
        text-decoration: line-through;
        margin-right: 0.5rem;
    }

    .savings {
        background: #28a745;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .pricing-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-top: 1rem;
    }

    .price-breakdown {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
    }

    .price-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 0.75rem;
    }

    .price-item:last-child {
        margin-bottom: 0;
    }

    .price-icon {
        width: 32px;
        height: 32px;
        background: #667eea;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.875rem;
    }

    .price-info {
        flex: 1;
    }

    .price-label-small {
        font-size: 0.75rem;
        color: #6c757d;
        margin-bottom: 0.125rem;
    }

    .price-value-small {
        font-size: 1rem;
        font-weight: 600;
        color: #212529;
    }

    /* Inventory Styles */
    .inventory-card .card-header-modern {
        background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%);
    }

    .inventory-overview {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .stock-status-card {
        background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
        color: white;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
    }

    .stock-icon {
        font-size: 2.5rem;
        margin-bottom: 0.75rem;
        opacity: 0.9;
    }

    .stock-info .stock-label {
        font-size: 0.875rem;
        opacity: 0.9;
        margin-bottom: 0.25rem;
    }

    .stock-info .stock-value {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .stock-status {
        background: rgba(255, 255, 255, 0.2);
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .inventory-metrics {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .metric-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .metric-card {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .metric-icon {
        width: 40px;
        height: 40px;
        background: #667eea;
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.125rem;
    }

    .metric-content {
        flex: 1;
    }

    .metric-label {
        font-size: 0.75rem;
        color: #6c757d;
        margin-bottom: 0.125rem;
    }

    .metric-value {
        font-size: 1.125rem;
        font-weight: 600;
        color: #212529;
    }

    /* Flags Styles */
    .flags-card .card-header-modern {
        background: linear-gradient(135deg, #a29bfe 0%, #6c5ce7 100%);
    }

    .flags-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }

    .flag-item {
        background: #f8f9fa;
        border-radius: 12px;
        padding: 1rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .flag-item.flag-active {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        border-color: #28a745;
    }

    .flag-item.flag-inactive {
        background: #f8f9fa;
        border-color: #dee2e6;
    }

    .flag-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.125rem;
        color: white;
    }

    .flag-active .flag-icon {
        background: #28a745;
    }

    .flag-inactive .flag-icon {
        background: #6c757d;
    }

    .flag-content {
        flex: 1;
    }

    .flag-label {
        font-size: 1rem;
        font-weight: 600;
        color: #212529;
        margin-bottom: 0.25rem;
    }

    .flag-status {
        font-size: 0.875rem;
        font-weight: 500;
    }

    .flag-active .flag-status {
        color: #28a745;
    }

    .flag-inactive .flag-status {
        color: #6c757d;
    }

    .flag-toggle {
        width: 48px;
        height: 24px;
        border-radius: 12px;
        position: relative;
        transition: all 0.3s ease;
    }

    .flag-toggle.toggle-on {
        background: #28a745;
    }

    .flag-toggle.toggle-off {
        background: #dee2e6;
    }

    .toggle-indicator {
        width: 20px;
        height: 20px;
        background: white;
        border-radius: 50%;
        position: absolute;
        top: 2px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .toggle-on .toggle-indicator {
        left: 26px;
    }

    .toggle-off .toggle-indicator {
        left: 2px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .admin-container {
            padding: 1rem;
        }

        .info-grid {
            grid-template-columns: 1fr;
        }

        .dashboard-header {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
        }

        .dashboard-header h2 {
            font-size: 1.5rem;
        }

        .info-row {
            grid-template-columns: 1fr;
        }

        .pricing-details {
            grid-template-columns: 1fr;
        }

        .inventory-overview {
            grid-template-columns: 1fr;
        }

        .metric-row {
            grid-template-columns: 1fr;
        }

        .flags-grid {
            grid-template-columns: 1fr;
        }

        .price-value {
            font-size: 1.5rem;
        }
    }

    .product-image-container {
        position: relative;
        overflow: hidden;
        border-radius: 12px;
        background: #f8f9fa;
        box-shadow: 0 4px 16px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
    }

    .product-image-container:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 32px rgba(0,0,0,0.12);
    }

    .carousel-inner {
        border-radius: 12px;
        overflow: hidden;
    }

    .carousel-item img {
        transition: transform 0.3s ease;
    }

    .carousel-item:hover img {
        transform: scale(1.02);
    }

    .thumbnail-img {
        border-radius: 8px;
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .thumbnail-img:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .thumbnail-img.active {
        border: 2px solid #1399FF;
        box-shadow: 0 0 0 2px rgba(19, 153, 255, 0.2);
    }
</style>
}

<div class="admin-container">
    <div class="row g-4">
        <div class="col-xl-3 col-lg-4">
            <!-- Admin Navigation Sidebar -->
            <div class="admin-sidebar">
                <div class="sidebar-header">
                    <h5>Admin Panel</h5>
                    <div class="admin-badge">
                        <i class="fas fa-shield-alt me-1"></i>Management
                    </div>
                </div>
                <nav>
                    <ul class="admin-nav">
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Dashboard", "Admin")" class="admin-nav-link">
                                <i class="fas fa-tachometer-alt"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Orders", "Admin")" class="admin-nav-link">
                                <i class="fas fa-shopping-cart"></i>
                                <span>Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Products", "Admin")" class="admin-nav-link active">
                                <i class="fas fa-box"></i>
                                <span>Products</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Users", "Admin")" class="admin-nav-link">
                                <i class="fas fa-users"></i>
                                <span>Users</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Inventory", "Admin")" class="admin-nav-link">
                                <i class="fas fa-warehouse"></i>
                                <span>Inventory</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Settings", "Admin")" class="admin-nav-link">
                                <i class="fas fa-cog"></i>
                                <span>Settings</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-xl-9 col-lg-8">
            <div class="main-content">
                <!-- Page Header -->
                <div class="page-header">
                    <div class="d-flex justify-content-between align-items-start mb-3">
                        <div>
                            <h2 class="mb-2">@Model.Name</h2>
                            <div class="text-muted">Product ID: @Model.Id | Last updated: @Model.UpdatedAt.ToString("MMM dd, yyyy HH:mm")</div>
                        </div>
                        <div class="btn-group" role="group">
                            <a href="@Url.Action("EditProduct", "Admin", new { id = Model.Id })" class="btn btn-primary">
                                <i class="fas fa-edit me-1"></i>Edit Product
                            </a>
                            <a href="@Url.Action("Products", "Admin")" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to Products
                            </a>
                        </div>
                    </div>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Admin")">Admin Dashboard</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Products", "Admin")">Products</a></li>
                            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                        </ol>
                    </nav>
                </div>

            <div class="admin-content">

                <!-- Expanded Product Details Container -->
                <div class="row">
                    <div class="col-12">
                        <div class="expanded-product-container">
                            <div class="row g-4">
                                <!-- Product Details -->
                                <div class="col-12">
                                    <div class="product-details-section">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h1 class="display-6 fw-bold mb-0">@Model.Name</h1>
                                <div class="badge-container">
                                    @if (Model.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                    @if (Model.IsFeatured)
                                    {
                                        <span class="badge bg-primary">Featured</span>
                                    }
                                    @if (Model.IsOnSale)
                                    {
                                        <span class="badge bg-warning">On Sale</span>
                                    }
                                </div>
                            </div>
                            
                            <!-- Basic Information -->
                            <div class="modern-info-card">
                                <div class="card-header-modern">
                                    <div class="header-icon">
                                        <i class="fas fa-info-circle"></i>
                                    </div>
                                    <h5>Basic Information</h5>
                                </div>
                                <div class="card-body-modern">
                                    <div class="info-row">
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-hashtag"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">Product ID</div>
                                                <div class="info-value">#@Model.Id</div>
                                            </div>
                                        </div>
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-tag"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">Brand</div>
                                                <div class="info-value">@(Model.Brand?.Name ?? "N/A")</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="info-row">
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-folder"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">Category</div>
                                                <div class="info-value">@(Model.Category?.Name ?? "N/A")</div>
                                            </div>
                                        </div>
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-eye"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">View Count</div>
                                                <div class="info-value">@Model.ViewCount.ToString("N0")</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="info-row">
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-calendar-plus"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">Created</div>
                                                <div class="info-value">@Model.CreatedAt.ToString("MMM dd, yyyy")</div>
                                            </div>
                                        </div>
                                        <div class="info-card">
                                            <div class="info-icon">
                                                <i class="fas fa-calendar-check"></i>
                                            </div>
                                            <div class="info-content">
                                                <div class="info-label">Last Updated</div>
                                                <div class="info-value">@Model.UpdatedAt.ToString("MMM dd, yyyy")</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Pricing Information -->
                            <div class="modern-info-card pricing-card">
                                <div class="card-header-modern">
                                    <div class="header-icon pricing-icon">
                                        <i class="fas fa-dollar-sign"></i>
                                    </div>
                                    <h5>Pricing Information</h5>
                                </div>
                                <div class="card-body-modern">
                                    <div class="pricing-highlight">
                                        <div class="current-price-card">
                                            <div class="price-label">Current Price</div>
                                            <div class="price-value @(Model.IsOnSale ? "sale-price" : "regular-price")">R@(currentPrice.ToString("N2"))</div>
                                            @if (Model.IsOnSale && Model.SalePrice.HasValue)
                                            {
                                                <div class="original-price">Was R@(Model.Price.ToString("N2"))</div>
                                                <div class="savings">Save R@((Model.Price - Model.SalePrice.Value).ToString("N2"))</div>
                                            }
                                        </div>
                                    </div>
                                    <div class="pricing-details">
                                        <div class="price-breakdown">
                                            <div class="price-item">
                                                <div class="price-icon">
                                                    <i class="fas fa-tag"></i>
                                                </div>
                                                <div class="price-info">
                                                    <div class="price-label-small">Base Price</div>
                                                    <div class="price-value-small">R@(Model.Price.ToString("N2"))</div>
                                                </div>
                                            </div>
                                            @if (Model.CompareAtPrice.HasValue)
                                            {
                                                <div class="price-item">
                                                    <div class="price-icon">
                                                        <i class="fas fa-balance-scale"></i>
                                                    </div>
                                                    <div class="price-info">
                                                        <div class="price-label-small">Compare At</div>
                                                        <div class="price-value-small">R@(Model.CompareAtPrice.Value.ToString("N2"))</div>
                                                    </div>
                                                </div>
                                            }
                                            @if (Model.IsOnSale && Model.SalePrice.HasValue)
                                            {
                                                <div class="price-item sale-item">
                                                    <div class="price-icon">
                                                        <i class="fas fa-fire"></i>
                                                    </div>
                                                    <div class="price-info">
                                                        <div class="price-label-small">Sale Price</div>
                                                        <div class="price-value-small sale-highlight">R@(Model.SalePrice.Value.ToString("N2"))</div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Inventory Information -->
                            <div class="modern-info-card inventory-card">
                                <div class="card-header-modern">
                                    <div class="header-icon inventory-icon">
                                        <i class="fas fa-warehouse"></i>
                                    </div>
                                    <h5>Inventory Status</h5>
                                </div>
                                <div class="card-body-modern">
                                    <div class="inventory-overview">
                                        <div class="stock-status-card @(totalStock > 10 ? "stock-good" : totalStock > 0 ? "stock-low" : "stock-out")">
                                            <div class="stock-icon">
                                                <i class="fas @(totalStock > 10 ? "fa-check-circle" : totalStock > 0 ? "fa-exclamation-triangle" : "fa-times-circle")"></i>
                                            </div>
                                            <div class="stock-info">
                                                <div class="stock-label">Total Stock</div>
                                                <div class="stock-value">@totalStock.ToString("N0") units</div>
                                                <div class="stock-status">@(totalStock > 10 ? "In Stock" : totalStock > 0 ? "Low Stock" : "Out of Stock")</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="inventory-metrics">
                                        <div class="metric-row">
                                            <div class="metric-card">
                                                <div class="metric-icon">
                                                    <i class="fas fa-barcode"></i>
                                                </div>
                                                <div class="metric-content">
                                                    <div class="metric-label">SKU Variants</div>
                                                    <div class="metric-value">@Model.SKUs.Count</div>
                                                </div>
                                            </div>
                                            <div class="metric-card">
                                                <div class="metric-icon">
                                                    <i class="fas fa-dollar-sign"></i>
                                                </div>
                                                <div class="metric-content">
                                                    <div class="metric-label">Total Value</div>
                                                    <div class="metric-value">R@(totalValue.ToString("N2"))</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="metric-row">
                                            <div class="metric-card">
                                                <div class="metric-icon">
                                                    <i class="fas fa-bell"></i>
                                                </div>
                                                <div class="metric-content">
                                                    <div class="metric-label">Low Stock Alert</div>
                                                    <div class="metric-value">@(Model.SKUs.FirstOrDefault()?.LowStockThreshold ?? 5) units</div>
                                                </div>
                                            </div>
                                            <div class="metric-card">
                                                <div class="metric-icon">
                                                    <i class="fas fa-chart-line"></i>
                                                </div>
                                                <div class="metric-content">
                                                    <div class="metric-label">Avg. Price</div>
                                                    <div class="metric-value">R@((Model.SKUs.Any() ? Model.SKUs.Average(s => s.Price) : 0).ToString("N2"))</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Product Flags -->
                            <div class="modern-info-card flags-card">
                                <div class="card-header-modern">
                                    <div class="header-icon flags-icon">
                                        <i class="fas fa-flag"></i>
                                    </div>
                                    <h5>Product Status & Features</h5>
                                </div>
                                <div class="card-body-modern">
                                    <div class="flags-grid">
                                        <div class="flag-item @(Model.IsFeatured ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-star"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">Featured Product</div>
                                                <div class="flag-status">@(Model.IsFeatured ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsFeatured ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                        <div class="flag-item @(Model.IsBestSeller ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-trophy"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">Best Seller</div>
                                                <div class="flag-status">@(Model.IsBestSeller ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsBestSeller ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                        <div class="flag-item @(Model.IsNew ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-sparkles"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">New Product</div>
                                                <div class="flag-status">@(Model.IsNew ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsNew ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                        <div class="flag-item @(Model.IsHot ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-fire"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">Hot Product</div>
                                                <div class="flag-status">@(Model.IsHot ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsHot ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                        <div class="flag-item @(Model.IsTodayDeal ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-clock"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">Today's Deal</div>
                                                <div class="flag-status">@(Model.IsTodayDeal ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsTodayDeal ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                        <div class="flag-item @(Model.IsOnSale ? "flag-active" : "flag-inactive")">
                                            <div class="flag-icon">
                                                <i class="fas fa-percentage"></i>
                                            </div>
                                            <div class="flag-content">
                                                <div class="flag-label">On Sale</div>
                                                <div class="flag-status">@(Model.IsOnSale ? "Active" : "Inactive")</div>
                                            </div>
                                            <div class="flag-toggle @(Model.IsOnSale ? "toggle-on" : "toggle-off")">
                                                <div class="toggle-indicator"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Description -->
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="product-details-card">
                        <div class="card-header">
                            <h3><i class="fas fa-align-left"></i>Description</h3>
                        </div>
                        <div class="card-body">
                            <div class="description-content">
                                @Html.Raw(Model.Description)
                            </div>
                        </div>
                    </div>
                }

                <!-- Product Specifications -->
                @if (Model.ProductSpecifications.Any())
                {
                    <div class="product-details-card">
                        <div class="card-header">
                            <h3><i class="fas fa-list"></i>Specifications</h3>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Specification</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var spec in Model.ProductSpecifications)
                                        {
                                            <tr>
                                                <td><strong>@spec.SpecificationName</strong></td>
                                                <td>@spec.SpecificationValue</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }

                <!-- SKU Details -->
                @if (Model.SKUs.Any())
                {
                    <div class="product-details-card">
                        <div class="card-header">
                            <h3><i class="fas fa-barcode"></i>SKU Details</h3>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>SKU Code</th>
                                            <th>Price</th>
                                            <th>Stock</th>
                                            <th>Low Stock Threshold</th>
                                            <th>Status</th>
                                            <th>Created</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var sku in Model.SKUs)
                                        {
                                            <tr>
                                                <td><code>@sku.SKUCode</code></td>
                                                <td>R@(sku.Price.ToString("N2"))</td>
                                                <td>
                                                    <span class="@(sku.StockQuantity <= sku.LowStockThreshold ? "text-danger" : "text-success") fw-bold">
                                                        @sku.StockQuantity
                                                    </span>
                                                </td>
                                                <td>@sku.LowStockThreshold</td>
                                                <td>
                                                    @if (sku.IsActive)
                                                    {
                                                        <span class="badge badge-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-danger">Inactive</span>
                                                    }
                                                </td>
                                                <td>@sku.CreatedAt.ToString("yyyy-MM-dd")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }

                <!-- Related Products -->
                @if (relatedProducts != null && relatedProducts.Any())
                {
                    <div class="product-details-card">
                        <div class="card-header">
                            <h3><i class="fas fa-link"></i>Related Products</h3>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @foreach (var relatedProduct in relatedProducts)
                                {
                                    <div class="col-md-3 mb-3">
                                        <a href="@Url.Action("ProductDetails", "Admin", new { id = relatedProduct.Id })" class="related-product-card text-decoration-none">
                                            <div class="card h-100 border-0 shadow-sm">
                                                @if (relatedProduct.ProductImages.Any())
                                                {
                                                    <img src="@relatedProduct.ProductImages.First().ImageUrl" 
                                                         class="card-img-top" 
                                                         alt="@relatedProduct.Name" 
                                                         style="height: 150px; object-fit: cover; border-radius: var(--border-radius) var(--border-radius) 0 0;">
                                                }
                                                else
                                                {
                                                    <div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 150px; border-radius: var(--border-radius) var(--border-radius) 0 0;">
                                                        <i class="fas fa-image fa-2x text-muted"></i>
                                                    </div>
                                                }
                                                <div class="card-body">
                                                    <h6 class="card-title text-dark">@relatedProduct.Name</h6>
                                                    <p class="card-text small text-muted">@relatedProduct.Brand?.Name</p>
                                                    <p class="card-text"><strong class="text-primary">R@(relatedProduct.Price.ToString("N2"))</strong></p>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.admin-layout {
    min-height: 100vh;
    background-color: #f8f9fa;
}

.admin-content {
    padding: 2rem;
}

.expanded-product-container {
    background: white;
    border-radius: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
    padding: 2rem;
    margin-bottom: 2rem;
}

.product-details-section {
    height: 100%;
}

.badge-container .badge {
    margin-left: 0.25rem;
}



.related-product-card {
    display: block;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.related-product-card:hover {
    transform: translateY(-5px);
    text-decoration: none;
}

.related-product-card:hover .card {
    box-shadow: var(--shadow-lg) !important;
}



.breadcrumb {
    background: transparent;
    padding: 0;
}

.breadcrumb-item + .breadcrumb-item::before {
    color: var(--text-muted);
}

.breadcrumb-item a {
    color: var(--primary);
    text-decoration: none;
}

.breadcrumb-item a:hover {
    text-decoration: underline;
}

.breadcrumb-item.active {
    color: var(--text-muted);
}

/* Main Content Styling */
.main-content {
    background: white;
    border-radius: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
    padding: 2rem;
    min-height: calc(100vh - 4rem);
    margin-bottom: 2rem;
}

.page-header {
    border-bottom: 2px solid var(--border);
    padding-bottom: 1.5rem;
    margin-bottom: 2rem;
}

.page-header h2 {
    font-weight: 700;
    color: var(--text-dark);
    font-size: 1.75rem;
}

.page-header .btn {
    border-radius: 8px;
    font-weight: 600;
    padding: 0.5rem 1rem;
    transition: all 0.3s ease;
}

.page-header .btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Responsive Design */
@@media (max-width: 992px) {
    .main-content {
        padding: 1.5rem;
        margin-bottom: 1rem;
    }
    
    .page-header .d-flex {
        flex-direction: column;
        gap: 1rem;
    }
    
    .page-header .btn-group {
        align-self: stretch;
    }
}

@@media (max-width: 768px) {
    .admin-container {
        padding: 1rem;
    }
    
    .main-content {
        padding: 1rem;
    }
    
    .page-header h2 {
        font-size: 1.5rem;
    }
}
</style>