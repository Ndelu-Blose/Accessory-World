@model List<AccessoryWorld.ViewModels.AdminInventoryViewModel>
@{
    ViewData["Title"] = "Inventory Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --admin-primary: #2c3e50;
        --admin-secondary: #34495e;
        --admin-accent: #3498db;
        --admin-success: #27ae60;
        --admin-warning: #f39c12;
        --admin-danger: #e74c3c;
        --admin-light: #ecf0f1;
        --admin-dark: #2c3e50;
    }

    .admin-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 0;
    }

    .admin-sidebar {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin: 20px;
        padding: 0;
        height: calc(100vh - 40px);
        overflow-y: auto;
    }

    .admin-sidebar-header {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
        padding: 25px 20px;
        border-radius: 15px 15px 0 0;
        text-align: center;
    }

    .admin-sidebar-header h4 {
        margin: 0;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .admin-nav {
        padding: 20px 0;
    }

    .admin-nav-item {
        margin: 0 15px 8px 15px;
    }

    .admin-nav-link {
        display: flex;
        align-items: center;
        padding: 12px 20px;
        color: var(--admin-dark);
        text-decoration: none;
        border-radius: 10px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .admin-nav-link:hover {
        background: linear-gradient(135deg, var(--admin-accent), #5dade2);
        color: white;
        transform: translateX(5px);
    }

    .admin-nav-link.active {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
    }

    .admin-nav-link i {
        width: 20px;
        margin-right: 12px;
        text-align: center;
    }

    .admin-content {
        padding: 20px;
    }

    .admin-content-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        border: none;
        margin-bottom: 20px;
    }
</style>

<div class="admin-container">
    <div class="row g-0">
        <!-- Sidebar -->
        <div class="col-md-3">
            <div class="admin-sidebar">
                <div class="admin-sidebar-header">
                    <h4><i class="fas fa-tachometer-alt me-2"></i>Admin Panel</h4>
                </div>
                <nav class="admin-nav">
                    <ul class="list-unstyled mb-0">
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Dashboard", "Admin")" class="admin-nav-link">
                                <i class="fas fa-home"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Orders", "Admin")" class="admin-nav-link">
                                <i class="fas fa-shopping-cart"></i>
                                <span>Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Products", "Admin")" class="admin-nav-link">
                                <i class="fas fa-box"></i>
                                <span>Products</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Users", "Admin")" class="admin-nav-link">
                                <i class="fas fa-users"></i>
                                <span>Users</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Inventory", "Admin")" class="admin-nav-link active">
                                <i class="fas fa-warehouse"></i>
                                <span>Inventory</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Reports", "Admin")" class="admin-nav-link">
                                <i class="fas fa-chart-bar"></i>
                                <span>Reports</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Settings", "Admin")" class="admin-nav-link">
                                <i class="fas fa-cog"></i>
                                <span>Settings</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="admin-content">
                <div class="admin-content-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h2 class="mb-0">Inventory Management</h2>
                            <div class="btn-toolbar">
                                <button type="button" class="btn btn-success me-2" onclick="exportInventory()">
                                    <i class="fas fa-download me-1"></i>Export Inventory
                                </button>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addInventoryModal">
                                    <i class="fas fa-plus me-1"></i>Add Inventory Item
                                </button>
                            </div>
                        </div>

            <!-- Inventory Stats -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-white bg-primary">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="card-title">@ViewBag.TotalSKUs</h4>
                                    <p class="card-text">Total SKUs</p>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-boxes fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="card-title">@ViewBag.InStockSKUs</h4>
                                    <p class="card-text">In Stock</p>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-check-circle fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="card-title">@ViewBag.LowStockSKUs</h4>
                                    <p class="card-text">Low Stock</p>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-exclamation-triangle fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-danger">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4 class="card-title">@ViewBag.OutOfStockSKUs</h4>
                                    <p class="card-text">Out of Stock</p>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-times-circle fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Search and Filter Bar -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-3">
                            <input type="text" class="form-control" name="search" placeholder="Search SKU, Product..." value="@ViewBag.SearchTerm">
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="status">
                                <option value="">All Status</option>
                                <option value="active" selected="@(ViewBag.StatusFilter == "active")">Active</option>
                                <option value="inactive" selected="@(ViewBag.StatusFilter == "inactive")">Inactive</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="stockLevel">
                                <option value="">All Stock Levels</option>
                                <option value="instock" selected="@(ViewBag.StockFilter == "instock")">In Stock</option>
                                <option value="lowstock" selected="@(ViewBag.StockFilter == "lowstock")">Low Stock</option>
                                <option value="outofstock" selected="@(ViewBag.StockFilter == "outofstock")">Out of Stock</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <select class="form-select" name="sortBy">
                                <option value="name">Sort by Name</option>
                                <option value="sku" selected="@(ViewBag.SortBy == "sku")">Sort by SKU</option>
                                <option value="stock" selected="@(ViewBag.SortBy == "stock")">Sort by Stock</option>
                                <option value="price" selected="@(ViewBag.SortBy == "price")">Sort by Price</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="fas fa-filter me-1"></i>Filter
                            </button>
                            <a href="@Url.Action("Inventory")" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-1"></i>Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Inventory Table -->
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Product</th>
                                    <th>SKU Code</th>
                                    <th>Variant</th>
                                    <th>Price</th>
                                    <th>Current Stock</th>
                                    <th>Reserved</th>
                                    <th>Available</th>
                                    <th>Low Stock Threshold</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="@(item.AvailableStock <= 0 ? "table-danger" : item.AvailableStock <= item.LowStockThreshold ? "table-warning" : "")">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                                {
                                                    <img src="@item.ImageUrl" alt="@item.ProductName" class="me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                                }
                                                <div>
                                                    <strong>@item.ProductName</strong><br>
                                                    <small class="text-muted">@item.CategoryName - @item.BrandName</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td><code>@item.SKUCode</code></td>
                                        <td>@(item.Variant ?? "N/A")</td>
                                        <td>
                                            <strong>R @item.Price.ToString("N2")</strong>
                                            @if (item.CompareAtPrice.HasValue && item.CompareAtPrice > item.Price)
                                            {
                                                <br><small class="text-muted text-decoration-line-through">R @item.CompareAtPrice.Value.ToString("N2")</small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@item.CurrentStock</span>
                                        </td>
                                        <td>
                                            <span class="badge bg-warning">@item.ReservedStock</span>
                                        </td>
                                        <td>
                                            <span class="badge @(item.AvailableStock <= 0 ? "bg-danger" : item.AvailableStock <= item.LowStockThreshold ? "bg-warning" : "bg-success")">@item.AvailableStock</span>
                                        </td>
                                        <td>@item.LowStockThreshold</td>
                                        <td>
                                            <span class="badge @(item.IsActive ? "bg-success" : "bg-secondary")">@(item.IsActive ? "Active" : "Inactive")</span>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="updateStock(@item.SKUId, '@item.SKUCode', @item.CurrentStock)" title="Update Stock">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-info" onclick="viewMovements(@item.SKUId, '@item.SKUCode')" title="View Movements">
                                                    <i class="fas fa-history"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-@(item.IsActive ? "warning" : "success")" onclick="toggleStatus(@item.SKUId, @item.IsActive.ToString().ToLower())" title="@(item.IsActive ? "Deactivate" : "Activate")">
                                                    <i class="fas fa-@(item.IsActive ? "pause" : "play")"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No inventory items found</h5>
                            <p class="text-muted">Try adjusting your search criteria or add new products.</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <nav aria-label="Inventory pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&stockLevel=@ViewBag.StockFilter&sortBy=@ViewBag.SortBy">Previous</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&stockLevel=@ViewBag.StockFilter&sortBy=@ViewBag.SortBy">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&stockLevel=@ViewBag.StockFilter&sortBy=@ViewBag.SortBy">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<!-- Update Stock Modal -->
<div class="modal fade" id="updateStockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="updateStockForm">
                    <input type="hidden" id="updateSkuId" name="skuId">
                    <div class="mb-3">
                        <label class="form-label">SKU Code</label>
                        <input type="text" class="form-control" id="updateSkuCode" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Current Stock</label>
                        <input type="number" class="form-control" id="currentStock" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="newStock" class="form-label">New Stock Quantity</label>
                        <input type="number" class="form-control" id="newStock" name="newStock" min="0" required>
                    </div>
                    <div class="mb-3">
                        <label for="reason" class="form-label">Reason</label>
                        <select class="form-select" id="reason" name="reason" required>
                            <option value="">Select reason...</option>
                            <option value="Manual Adjustment">Manual Adjustment</option>
                            <option value="Stock Count">Stock Count</option>
                            <option value="Damaged Goods">Damaged Goods</option>
                            <option value="Returned Items">Returned Items</option>
                            <option value="Supplier Delivery">Supplier Delivery</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitStockUpdate()">
                    <i class="fas fa-sync me-1"></i>Update Stock
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Movement History Modal -->
<div class="modal fade" id="movementHistoryModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Stock Movement History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="movementHistoryContent">
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStock(skuId, skuCode, currentStock) {
            document.getElementById('updateSkuId').value = skuId;
            document.getElementById('updateSkuCode').value = skuCode;
            document.getElementById('currentStock').value = currentStock;
            document.getElementById('newStock').value = currentStock;
            
            var modal = new bootstrap.Modal(document.getElementById('updateStockModal'));
            modal.show();
        }

        function submitStockUpdate() {
            const form = document.getElementById('updateStockForm');
            const formData = new FormData(form);
            
            fetch('@Url.Action("UpdateStock")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Stock updated successfully!');
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while updating stock.');
            });
        }

        function viewMovements(skuId, skuCode) {
            document.querySelector('#movementHistoryModal .modal-title').textContent = `Stock Movement History - ${skuCode}`;
            
            const modal = new bootstrap.Modal(document.getElementById('movementHistoryModal'));
            modal.show();
            
            fetch(`@Url.Action("InventoryMovements")?skuId=${skuId}`)
            .then(response => response.json())
            .then(data => {
                let html = '';
                if (data.length === 0) {
                    html = '<p class="text-muted text-center">No movement history found.</p>';
                } else {
                    html = '<div class="table-responsive"><table class="table table-sm"><thead><tr><th>Date</th><th>Type</th><th>Quantity</th><th>Reason</th><th>User</th><th>Notes</th></tr></thead><tbody>';
                    data.forEach(movement => {
                        const quantityClass = movement.quantity > 0 ? 'text-success' : 'text-danger';
                        const quantitySign = movement.quantity > 0 ? '+' : '';
                        html += `<tr>
                            <td>${new Date(movement.createdAt).toLocaleString()}</td>
                            <td><span class="badge bg-secondary">${movement.movementType}</span></td>
                            <td class="${quantityClass}">${quantitySign}${movement.quantity}</td>
                            <td>${movement.reasonCode}</td>
                            <td>${movement.userName || 'System'}</td>
                            <td>${movement.notes || ''}</td>
                        </tr>`;
                    });
                    html += '</tbody></table></div>';
                }
                document.getElementById('movementHistoryContent').innerHTML = html;
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('movementHistoryContent').innerHTML = '<p class="text-danger text-center">Error loading movement history.</p>';
            });
        }

        function toggleStatus(skuId, isActive) {
            const action = isActive ? 'deactivate' : 'activate';
            if (confirm(`Are you sure you want to ${action} this SKU?`)) {
                fetch('@Url.Action("ToggleSKUStatus")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ skuId: skuId, isActive: !isActive })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`SKU ${action}d successfully!`);
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating SKU status.');
                });
            }
        }

        function exportInventory() {
            window.location.href = '@Url.Action("ExportInventory", "Admin")';
        }
    </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}