@model IEnumerable<AccessoryWorld.ViewModels.ShippingLabelViewModel>
@{
    ViewData["Title"] = "Shipping Labels";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-shipping-fast"></i> Shipping Labels
                    </h4>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary" onclick="bulkPrintLabels()">
                            <i class="fas fa-print"></i> Bulk Print
                        </button>
                        <button class="btn btn-success" onclick="generatePendingLabels()">
                            <i class="fas fa-plus"></i> Generate Pending
                        </button>
                    </div>
                </div>
                
                <!-- Filters -->
                <div class="card-body border-bottom">
                    <form method="get" class="row g-3">
                        <div class="col-md-3">
                            <label for="status" class="form-label">Label Status</label>
                            <select class="form-select" id="status" name="status">
                                <option value="">All Statuses</option>
                                <option value="PENDING" @(ViewBag.StatusFilter == "PENDING" ? "selected" : "")>Pending Generation</option>
                                <option value="GENERATED" @(ViewBag.StatusFilter == "GENERATED" ? "selected" : "")>Generated</option>
                                <option value="PRINTED" @(ViewBag.StatusFilter == "PRINTED" ? "selected" : "")>Printed</option>
                                <option value="SHIPPED" @(ViewBag.StatusFilter == "SHIPPED" ? "selected" : "")>Shipped</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="courier" class="form-label">Courier</label>
                            <select class="form-select" id="courier" name="courier">
                                <option value="">All Couriers</option>
                                <option value="ARAMEX" @(ViewBag.CourierFilter == "ARAMEX" ? "selected" : "")>Aramex</option>
                                <option value="FASTWAY" @(ViewBag.CourierFilter == "FASTWAY" ? "selected" : "")>Fastway</option>
                                <option value="POSTNET" @(ViewBag.CourierFilter == "POSTNET" ? "selected" : "")>PostNet</option>
                                <option value="DAWN_WING" @(ViewBag.CourierFilter == "DAWN_WING" ? "selected" : "")>Dawn Wing</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">Date From</label>
                            <input type="date" class="form-control" id="dateFrom" name="dateFrom" value="@ViewBag.DateFrom">
                        </div>
                        <div class="col-md-3">
                            <label for="dateTo" class="form-label">Date To</label>
                            <input type="date" class="form-control" id="dateTo" name="dateTo" value="@ViewBag.DateTo">
                        </div>
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search"></i> Filter
                            </button>
                            <a href="@Url.Action("ShippingLabels")" class="btn btn-outline-secondary">
                                <i class="fas fa-times"></i> Clear
                            </a>
                        </div>
                    </form>
                </div>

                <div class="card-body p-0">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>
                                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                                        </th>
                                        <th>Order</th>
                                        <th>Customer</th>
                                        <th>Shipping Address</th>
                                        <th>Courier</th>
                                        <th>Tracking Number</th>
                                        <th>Status</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var label in Model)
                                    {
                                        <tr>
                                            <td>
                                                <input type="checkbox" class="label-checkbox" value="@label.OrderId">
                                            </td>
                                            <td>
                                                <div>
                                                    <a href="@Url.Action("OrderDetails", new { id = label.OrderId })" class="text-decoration-none">
                                                        <strong>#@label.OrderNumber</strong>
                                                    </a>
                                                    <br>
                                                    <small class="text-muted">R @label.OrderTotal.ToString("N2")</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    @label.CustomerName
                                                    <br>
                                                    <small class="text-muted">@label.CustomerEmail</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="small">
                                                    @label.AddressLine1<br>
                                                    @if (!string.IsNullOrEmpty(label.AddressLine2))
                                                    {
                                                        @label.AddressLine2<br>
                                                    }
                                                    @label.City, @label.Province<br>
                                                    @label.PostalCode
                                                </div>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(label.CourierCode))
                                                {
                                                    <span class="badge bg-info">@label.CourierCode</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not assigned</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(label.TrackingNumber))
                                                {
                                                    <code>@label.TrackingNumber</code>
                                                    <br>
                                                    <a href="#" onclick="trackShipment('@label.TrackingNumber', '@label.CourierCode')" class="small text-primary">
                                                        <i class="fas fa-external-link-alt"></i> Track
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not generated</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-@GetLabelStatusColor(label.Status)">@label.Status</span>
                                                @if (label.Status == "GENERATED" && label.GeneratedAt.HasValue)
                                                {
                                                    <br>
                                                    <small class="text-muted">@label.GeneratedAt.Value.ToString("MMM dd, HH:mm")</small>
                                                }
                                            </td>
                                            <td>
                                                <div>
                                                    @label.CreatedAt.ToString("MMM dd, yyyy")
                                                    <br>
                                                    <small class="text-muted">@label.CreatedAt.ToString("HH:mm")</small>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    @if (label.Status == "PENDING")
                                                    {
                                                        <button class="btn btn-outline-success btn-sm" title="Generate Label" 
                                                                onclick="generateLabel(@label.OrderId)">
                                                            <i class="fas fa-plus"></i>
                                                        </button>
                                                    }
                                                    @if (label.Status == "GENERATED" || label.Status == "PRINTED")
                                                    {
                                                        <button class="btn btn-outline-primary btn-sm" title="Print Label" 
                                                                onclick="printLabel(@label.OrderId)">
                                                            <i class="fas fa-print"></i>
                                                        </button>
                                                        <button class="btn btn-outline-info btn-sm" title="Download PDF" 
                                                                onclick="downloadLabel(@label.OrderId)">
                                                            <i class="fas fa-download"></i>
                                                        </button>
                                                    }
                                                    @if (label.Status == "PRINTED")
                                                    {
                                                        <button class="btn btn-outline-warning btn-sm" title="Mark as Shipped" 
                                                                onclick="markAsShipped(@label.OrderId)">
                                                            <i class="fas fa-shipping-fast"></i>
                                                        </button>
                                                    }
                                                    <button class="btn btn-outline-secondary btn-sm" title="View Details" 
                                                            onclick="viewLabelDetails(@label.OrderId)">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shipping-fast fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No shipping labels found</h5>
                            <p class="text-muted">Try adjusting your search criteria or generate labels for pending orders.</p>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (ViewBag.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Shipping labels pagination">
                            <ul class="pagination justify-content-center mb-0">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize">
                                            <i class="fas fa-chevron-left"></i>
                                        </a>
                                    </li>
                                }
                                
                                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="?page=@i&pageSize=@ViewBag.PageSize">@i</a>
                                    </li>
                                }
                                
                                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize">
                                            <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Label Details Modal -->
<div class="modal fade" id="labelDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Shipping Label Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="labelDetailsContent">
                <!-- Label details will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Courier Selection Modal -->
<div class="modal fade" id="courierSelectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Courier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="courierSelectionForm">
                    <input type="hidden" id="selectedOrderId" name="orderId">
                    <div class="mb-3">
                        <label for="courierCode" class="form-label">Courier Service</label>
                        <select class="form-select" id="courierCode" name="courierCode" required>
                            <option value="">Select courier...</option>
                            <option value="ARAMEX">Aramex</option>
                            <option value="FASTWAY">Fastway</option>
                            <option value="POSTNET">PostNet</option>
                            <option value="DAWN_WING">Dawn Wing</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="serviceType" class="form-label">Service Type</label>
                        <select class="form-select" id="serviceType" name="serviceType" required>
                            <option value="">Select service type...</option>
                            <option value="STANDARD">Standard Delivery</option>
                            <option value="EXPRESS">Express Delivery</option>
                            <option value="OVERNIGHT">Overnight Delivery</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="requireSignature" name="requireSignature">
                            <label class="form-check-label" for="requireSignature">
                                Require signature on delivery
                            </label>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="insuranceRequired" name="insuranceRequired">
                            <label class="form-check-label" for="insuranceRequired">
                                Add insurance coverage
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="submitCourierSelection()">
                    <i class="fas fa-shipping-fast me-1"></i>Generate Label
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetLabelStatusColor(string status)
    {
        return status switch
        {
            "PENDING" => "warning",
            "GENERATED" => "info",
            "PRINTED" => "primary",
            "SHIPPED" => "success",
            "DELIVERED" => "success",
            _ => "light"
        };
    }
}

@section Scripts {
    <script>
        function toggleSelectAll() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.label-checkbox');
            checkboxes.forEach(cb => cb.checked = selectAll.checked);
        }
        
        function generateLabel(orderId) {
            document.getElementById('selectedOrderId').value = orderId;
            new bootstrap.Modal(document.getElementById('courierSelectionModal')).show();
        }
        
        function submitCourierSelection() {
            const form = document.getElementById('courierSelectionForm');
            const formData = new FormData(form);
            
            fetch('/Admin/GenerateShippingLabel', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    bootstrap.Modal.getInstance(document.getElementById('courierSelectionModal')).hide();
                    location.reload();
                } else {
                    alert('Error generating label: ' + data.message);
                }
            })
            .catch(error => {
                alert('Error generating label');
            });
        }
        
        function printLabel(orderId) {
            window.open(`/Admin/PrintShippingLabel/${orderId}`, '_blank');
        }
        
        function downloadLabel(orderId) {
            window.location.href = `/Admin/DownloadShippingLabel/${orderId}`;
        }
        
        function markAsShipped(orderId) {
            if (confirm('Are you sure you want to mark this order as shipped?')) {
                fetch('/Admin/MarkOrderAsShipped', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify({ orderId: orderId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error marking order as shipped: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('Error marking order as shipped');
                });
            }
        }
        
        function viewLabelDetails(orderId) {
            fetch(`/Admin/GetShippingLabelDetails/${orderId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('labelDetailsContent').innerHTML = html;
                    new bootstrap.Modal(document.getElementById('labelDetailsModal')).show();
                })
                .catch(error => {
                    alert('Error loading label details');
                });
        }
        
        function trackShipment(trackingNumber, courierCode) {
            // Open courier tracking page in new window
            let trackingUrl = '';
            switch(courierCode) {
                case 'ARAMEX':
                    trackingUrl = `https://www.aramex.com/track/results?mode=0&ShipmentNumber=${trackingNumber}`;
                    break;
                case 'FASTWAY':
                    trackingUrl = `https://www.fastway.co.za/track-your-parcel?l=${trackingNumber}`;
                    break;
                case 'POSTNET':
                    trackingUrl = `https://www.postnet.co.za/track-and-trace/?tracking_number=${trackingNumber}`;
                    break;
                case 'DAWN_WING':
                    trackingUrl = `https://www.dawnwing.co.za/track/?waybill=${trackingNumber}`;
                    break;
                default:
                    alert('Tracking not available for this courier');
                    return;
            }
            window.open(trackingUrl, '_blank');
        }
        
        function bulkPrintLabels() {
            const selectedOrders = Array.from(document.querySelectorAll('.label-checkbox:checked')).map(cb => cb.value);
            if (selectedOrders.length === 0) {
                alert('Please select at least one order to print labels.');
                return;
            }
            
            const orderIds = selectedOrders.join(',');
            window.open(`/Admin/BulkPrintShippingLabels?orderIds=${orderIds}`, '_blank');
        }
        
        function generatePendingLabels() {
            if (confirm('This will generate labels for all pending delivery orders. Continue?')) {
                fetch('/Admin/GeneratePendingShippingLabels', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`Generated ${data.count} shipping labels successfully.`);
                        location.reload();
                    } else {
                        alert('Error generating labels: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('Error generating labels');
                });
            }
        }
    </script>
}