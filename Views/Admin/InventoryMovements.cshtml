@model List<AccessoryWorld.ViewModels.StockMovementViewModel>
@{
    ViewData["Title"] = "Inventory Movements";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --admin-primary: #2c3e50;
        --admin-secondary: #34495e;
        --admin-accent: #3498db;
        --admin-success: #27ae60;
        --admin-warning: #f39c12;
        --admin-danger: #e74c3c;
        --admin-light: #ecf0f1;
        --admin-dark: #2c3e50;
    }

    .admin-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 0;
    }

    .admin-sidebar {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin: 20px;
        padding: 0;
        height: calc(100vh - 40px);
        overflow-y: auto;
    }

    .admin-sidebar-header {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
        padding: 25px 20px;
        border-radius: 15px 15px 0 0;
        text-align: center;
    }

    .admin-sidebar-header h4 {
        margin: 0;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .admin-nav {
        padding: 20px 0;
    }

    .admin-nav-item {
        margin: 0 15px 8px 15px;
    }

    .admin-nav-link {
        display: flex;
        align-items: center;
        padding: 12px 20px;
        color: var(--admin-dark);
        text-decoration: none;
        border-radius: 10px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .admin-nav-link:hover {
        background: linear-gradient(135deg, var(--admin-accent), #5dade2);
        color: white;
        transform: translateX(5px);
    }

    .admin-nav-link.active {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
    }

    .admin-nav-link i {
        width: 20px;
        margin-right: 12px;
        text-align: center;
    }

    .admin-content {
        padding: 20px;
    }

    .admin-content-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        border: none;
        margin-bottom: 20px;
    }

    .movement-type-sale { border-left: 4px solid #dc3545; }
    .movement-type-receipt { border-left: 4px solid #198754; }
    .movement-type-adjustment { border-left: 4px solid #0d6efd; }
    .movement-type-transfer { border-left: 4px solid #6f42c1; }
    .movement-type-return { border-left: 4px solid #fd7e14; }
    .movement-type-writeoff { border-left: 4px solid #6c757d; }

    .quantity-positive { color: #198754; font-weight: bold; }
    .quantity-negative { color: #dc3545; font-weight: bold; }
    .quantity-neutral { color: #6c757d; font-weight: bold; }

    .movement-timeline {
        position: relative;
        padding-left: 30px;
    }

    .movement-timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #dee2e6;
    }

    .movement-timeline-item {
        position: relative;
        margin-bottom: 20px;
        background: white;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .movement-timeline-item::before {
        content: '';
        position: absolute;
        left: -22px;
        top: 20px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #0d6efd;
        border: 3px solid white;
        box-shadow: 0 0 0 2px #dee2e6;
    }

    .movement-timeline-item.sale::before { background: #dc3545; }
    .movement-timeline-item.receipt::before { background: #198754; }
    .movement-timeline-item.adjustment::before { background: #0d6efd; }
    .movement-timeline-item.transfer::before { background: #6f42c1; }
    .movement-timeline-item.return::before { background: #fd7e14; }
    .movement-timeline-item.writeoff::before { background: #6c757d; }
</style>

<div class="admin-container">
    <div class="row g-0">
        <!-- Sidebar -->
        <div class="col-md-3">
            <div class="admin-sidebar">
                <div class="admin-sidebar-header">
                    <h4><i class="fas fa-tachometer-alt me-2"></i>Admin Panel</h4>
                </div>
                <nav class="admin-nav">
                    <ul class="list-unstyled mb-0">
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Dashboard", "Admin")" class="admin-nav-link">
                                <i class="fas fa-home"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Orders", "Admin")" class="admin-nav-link">
                                <i class="fas fa-shopping-cart"></i>
                                <span>Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Products", "Admin")" class="admin-nav-link">
                                <i class="fas fa-box"></i>
                                <span>Products</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Users", "Admin")" class="admin-nav-link">
                                <i class="fas fa-users"></i>
                                <span>Users</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Inventory", "Admin")" class="admin-nav-link">
                                <i class="fas fa-warehouse"></i>
                                <span>Inventory</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("PurchaseOrders", "Admin")" class="admin-nav-link">
                                <i class="fas fa-file-invoice"></i>
                                <span>Purchase Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("StockWriteOffs", "Admin")" class="admin-nav-link">
                                <i class="fas fa-trash-alt"></i>
                                <span>Stock Write-offs</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("InventoryMovements", "Admin")" class="admin-nav-link active">
                                <i class="fas fa-exchange-alt"></i>
                                <span>Movement Logs</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Reports", "Admin")" class="admin-nav-link">
                                <i class="fas fa-chart-bar"></i>
                                <span>Reports</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Settings", "Admin")" class="admin-nav-link">
                                <i class="fas fa-cog"></i>
                                <span>Settings</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="admin-content">
                <div class="admin-content-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h2 class="mb-0">Inventory Movement Logs</h2>
                            <div class="btn-toolbar">
                                <button type="button" class="btn btn-success me-2" onclick="exportMovements()">
                                    <i class="fas fa-download"></i> Export
                                </button>
                                <div class="btn-group" role="group">
                                    <input type="radio" class="btn-check" name="viewMode" id="tableView" autocomplete="off" checked>
                                    <label class="btn btn-outline-primary" for="tableView">
                                        <i class="fas fa-table"></i> Table
                                    </label>
                                    <input type="radio" class="btn-check" name="viewMode" id="timelineView" autocomplete="off">
                                    <label class="btn btn-outline-primary" for="timelineView">
                                        <i class="fas fa-stream"></i> Timeline
                                    </label>
                                </div>
                            </div>
                        </div>

                        <!-- Movement Stats -->
                        <div class="row mb-4">
                            <div class="col-md-2">
                                <div class="card text-white bg-danger">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.SaleMovements</h5>
                                        <p class="card-text">Sales</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-success">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.ReceiptMovements</h5>
                                        <p class="card-text">Receipts</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-primary">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.AdjustmentMovements</h5>
                                        <p class="card-text">Adjustments</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-warning">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.ReturnMovements</h5>
                                        <p class="card-text">Returns</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-secondary">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.WriteOffMovements</h5>
                                        <p class="card-text">Write-offs</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-info">
                                    <div class="card-body text-center">
                                        <h5 class="card-title">@ViewBag.TotalMovements</h5>
                                        <p class="card-text">Total</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Search and Filter Bar -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <form method="get" class="row g-3">
                                    <div class="col-md-3">
                                        <input type="text" class="form-control" name="search" placeholder="Search SKU, Product, Reference..." value="@ViewBag.SearchTerm">
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-select" name="movementType">
                                            <option value="">All Types</option>
                                            <option value="SALE" selected="@(ViewBag.MovementTypeFilter == "SALE")">Sale</option>
                                            <option value="RECEIPT" selected="@(ViewBag.MovementTypeFilter == "RECEIPT")">Receipt</option>
                                            <option value="ADJUSTMENT" selected="@(ViewBag.MovementTypeFilter == "ADJUSTMENT")">Adjustment</option>
                                            <option value="TRANSFER" selected="@(ViewBag.MovementTypeFilter == "TRANSFER")">Transfer</option>
                                            <option value="RETURN" selected="@(ViewBag.MovementTypeFilter == "RETURN")">Return</option>
                                            <option value="WRITEOFF" selected="@(ViewBag.MovementTypeFilter == "WRITEOFF")">Write-off</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-select" name="reasonCode">
                                            <option value="">All Reasons</option>
                                            <option value="Stock In" selected="@(ViewBag.ReasonFilter == "Stock In")">Stock In</option>
                                            <option value="Stock Out" selected="@(ViewBag.ReasonFilter == "Stock Out")">Stock Out</option>
                                            <option value="Manual Adjustment" selected="@(ViewBag.ReasonFilter == "Manual Adjustment")">Manual Adjustment</option>
                                            <option value="Damaged" selected="@(ViewBag.ReasonFilter == "Damaged")">Damaged</option>
                                            <option value="Expired" selected="@(ViewBag.ReasonFilter == "Expired")">Expired</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="date" class="form-control" name="dateFrom" value="@ViewBag.DateFrom">
                                    </div>
                                    <div class="col-md-2">
                                        <input type="date" class="form-control" name="dateTo" value="@ViewBag.DateTo">
                                    </div>
                                    <div class="col-md-1">
                                        <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-1"></i>Filter
                    </button>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <!-- Table View -->
                        <div id="tableViewContent" class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Date/Time</th>
                                                <th>Product</th>
                                                <th>Movement Type</th>
                                                <th>Quantity</th>
                                                <th>Reason</th>
                                                <th>Reference</th>
                                                <th>User</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model != null)
                                            {
                                                @foreach (var movement in Model)
                                                {
                                                    <tr class="movement-type-@movement.MovementType.ToLower()">
                                                        <td>
                                                            <div>
                                                                <strong>@movement.CreatedAt.ToString("dd/MM/yyyy")</strong><br>
                                                                <small class="text-muted">@movement.CreatedAt.ToString("HH:mm:ss")</small>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="d-flex align-items-center">
                                                                @if (!string.IsNullOrEmpty(movement.ProductImageUrl))
                                                                {
                                                                    <img src="@movement.ProductImageUrl" alt="@movement.ProductName" class="me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                                                }
                                                                <div>
                                                                    <strong>@movement.ProductName</strong><br>
                                                                    <small class="text-muted">SKU: @movement.SKUCode</small>
                                                                </div>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <span class="badge bg-@(movement.MovementType.ToLower() == "sale" ? "danger" : movement.MovementType.ToLower() == "receipt" ? "success" : movement.MovementType.ToLower() == "adjustment" ? "primary" : movement.MovementType.ToLower() == "return" ? "warning" : "secondary")">
                                                                @movement.MovementType
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <span class="quantity-@(movement.Quantity > 0 ? "positive" : movement.Quantity < 0 ? "negative" : "neutral")">
                                                                @(movement.Quantity > 0 ? "+" : "")@movement.Quantity
                                                            </span>
                                                        </td>
                                                        <td>@movement.ReasonCode</td>
                                                        <td>
                                                            @if (!string.IsNullOrEmpty(movement.ReferenceNumber))
                                                            {
                                                                <a href="#" onclick="viewReference('@movement.ReferenceNumber', '@movement.MovementType')" class="text-decoration-none">
                                                                    @movement.ReferenceNumber
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">-</span>
                                                            }
                                                        </td>
                                                        <td>
                                                            <small>@movement.UserName</small>
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewMovementDetails('@movement.Id')" title="View Details">
                                                                <i class="fas fa-eye"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                @if (Model == null || !Model.Any())
                                {
                                    <div class="text-center py-4">
                                        <i class="fas fa-exchange-alt fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">No inventory movements found</h5>
                                        <p class="text-muted">Inventory movements will appear here as stock changes occur.</p>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Timeline View -->
                        <div id="timelineViewContent" class="card" style="display: none;">
                            <div class="card-body">
                                <div class="movement-timeline">
                                    @if (Model != null)
                                    {
                                        @foreach (var movement in Model)
                                        {
                                            <div class="movement-timeline-item @movement.MovementType.ToLower()">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div class="flex-grow-1">
                                                        <div class="d-flex align-items-center mb-2">
                                                            @if (!string.IsNullOrEmpty(movement.ProductImageUrl))
                                                            {
                                                                <img src="@movement.ProductImageUrl" alt="@movement.ProductName" class="me-3" style="width: 50px; height: 50px; object-fit: cover; border-radius: 8px;">
                                                            }
                                                            <div>
                                                                <h6 class="mb-1">@movement.ProductName</h6>
                                                                <small class="text-muted">SKU: @movement.SKUCode</small>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <p class="mb-1">
                                                                    <span class="badge bg-@(movement.MovementType.ToLower() == "sale" ? "danger" : movement.MovementType.ToLower() == "receipt" ? "success" : movement.MovementType.ToLower() == "adjustment" ? "primary" : movement.MovementType.ToLower() == "return" ? "warning" : "secondary")">
                                                                        @movement.MovementType
                                                                    </span>
                                                                    <span class="quantity-@(movement.Quantity > 0 ? "positive" : movement.Quantity < 0 ? "negative" : "neutral") ms-2">
                                                                        @(movement.Quantity > 0 ? "+" : "")@movement.Quantity units
                                                                    </span>
                                                                </p>
                                                                <p class="mb-1"><strong>Reason:</strong> @movement.ReasonCode</p>
                                                                @if (!string.IsNullOrEmpty(movement.ReferenceNumber))
                                                                {
                                                                    <p class="mb-1"><strong>Reference:</strong> @movement.ReferenceNumber</p>
                                                                }
                                                            </div>
                                                            <div class="col-md-6">
                                                                <p class="mb-1"><strong>User:</strong> @movement.UserName</p>
                                                                <p class="mb-1"><strong>Date:</strong> @movement.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
                                                                @if (!string.IsNullOrEmpty(movement.Notes))
                                                                {
                                                                    <p class="mb-0"><strong>Notes:</strong> @movement.Notes</p>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="ms-3">
                                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewMovementDetails('@movement.Id')" title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>

                                @if (Model == null || !Model.Any())
                                {
                                    <div class="text-center py-4">
                                        <i class="fas fa-stream fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">No inventory movements found</h5>
                                        <p class="text-muted">Inventory movements will appear here as stock changes occur.</p>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Pagination -->
                        @if (ViewBag.TotalPages > 1)
                        {
                            <nav aria-label="Movements pagination" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    @if (ViewBag.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.SearchTerm&movementType=@ViewBag.MovementTypeFilter&reasonCode=@ViewBag.ReasonFilter&dateFrom=@ViewBag.DateFrom&dateTo=@ViewBag.DateTo">Previous</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="?page=@i&search=@ViewBag.SearchTerm&movementType=@ViewBag.MovementTypeFilter&reasonCode=@ViewBag.ReasonFilter&dateFrom=@ViewBag.DateFrom&dateTo=@ViewBag.DateTo">@i</a>
                                        </li>
                                    }

                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.SearchTerm&movementType=@ViewBag.MovementTypeFilter&reasonCode=@ViewBag.ReasonFilter&dateFrom=@ViewBag.DateFrom&dateTo=@ViewBag.DateTo">Next</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Movement Details Modal -->
<div class="modal fade" id="movementModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Movement Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="movementContent">
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // View mode toggle
        document.addEventListener('DOMContentLoaded', function() {
            const tableViewRadio = document.getElementById('tableView');
            const timelineViewRadio = document.getElementById('timelineView');
            const tableViewContent = document.getElementById('tableViewContent');
            const timelineViewContent = document.getElementById('timelineViewContent');

            function toggleView() {
                if (tableViewRadio.checked) {
                    tableViewContent.style.display = 'block';
                    timelineViewContent.style.display = 'none';
                } else {
                    tableViewContent.style.display = 'none';
                    timelineViewContent.style.display = 'block';
                }
            }

            tableViewRadio.addEventListener('change', toggleView);
            timelineViewRadio.addEventListener('change', toggleView);
        });

        function viewMovementDetails(movementId) {
            const modal = new bootstrap.Modal(document.getElementById('movementModal'));
            modal.show();

            fetch(`@Url.Action("GetMovementDetails")?id=${movementId}`)
                .then(response => response.json())
                .then(data => {
                    displayMovementDetails(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('movementContent').innerHTML = '<p class="text-danger text-center">Error loading movement details.</p>';
                });
        }

        function displayMovementDetails(movement) {
            const html = `
                <div class="row">
                    <div class="col-md-6">
                        <h6>Movement Information</h6>
                        <table class="table table-sm">
                            <tr><td><strong>Movement ID:</strong></td><td>${movement.id}</td></tr>
                            <tr><td><strong>Type:</strong></td><td><span class="badge bg-primary">${movement.movementType}</span></td></tr>
                            <tr><td><strong>Quantity:</strong></td><td><span class="quantity-${movement.quantity > 0 ? 'positive' : movement.quantity < 0 ? 'negative' : 'neutral'}">${movement.quantity > 0 ? '+' : ''}${movement.quantity}</span></td></tr>
                            <tr><td><strong>Reason:</strong></td><td>${movement.reasonCode}</td></tr>
                            <tr><td><strong>Reference:</strong></td><td>${movement.referenceNumber || '-'}</td></tr>
                            <tr><td><strong>Date/Time:</strong></td><td>${new Date(movement.createdAt).toLocaleString()}</td></tr>
                            <tr><td><strong>User:</strong></td><td>${movement.userName}</td></tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Product Information</h6>
                        <div class="d-flex align-items-center mb-3">
                            ${movement.productImageUrl ? `<img src="${movement.productImageUrl}" alt="${movement.productName}" class="me-3" style="width: 80px; height: 80px; object-fit: cover; border-radius: 8px;">` : ''}
                            <div>
                                <h6 class="mb-1">${movement.productName}</h6>
                                <p class="mb-1"><strong>SKU:</strong> ${movement.skuCode}</p>
                                <p class="mb-0"><strong>Category:</strong> ${movement.categoryName || '-'}</p>
                            </div>
                        </div>
                        <table class="table table-sm">
                            <tr><td><strong>Current Stock:</strong></td><td>${movement.currentStock}</td></tr>
                            <tr><td><strong>Stock After:</strong></td><td>${movement.stockAfterMovement}</td></tr>
                        </table>
                    </div>
                </div>
                ${movement.notes ? `<hr><h6>Notes</h6><p>${movement.notes}</p>` : ''}
                ${movement.relatedDocuments && movement.relatedDocuments.length > 0 ? `
                    <hr>
                    <h6>Related Documents</h6>
                    <div class="d-flex flex-wrap gap-2">
                        ${movement.relatedDocuments.map(doc => `<a href="${doc.url}" target="_blank" class="btn btn-sm btn-outline-primary">${doc.name}</a>`).join('')}
                    </div>
                ` : ''}
            `;

            document.getElementById('movementContent').innerHTML = html;
        }

        function viewReference(referenceNumber, movementType) {
            // Navigate to the appropriate page based on movement type
            switch (movementType.toLowerCase()) {
                case 'sale':
                    window.open(`@Url.Action("OrderDetails", "Admin")?orderNumber=${referenceNumber}`, '_blank');
                    break;
                case 'receipt':
                    window.open(`@Url.Action("PurchaseOrderDetails", "Admin")?poNumber=${referenceNumber}`, '_blank');
                    break;
                case 'writeoff':
                    window.open(`@Url.Action("WriteOffDetails", "Admin")?referenceNumber=${referenceNumber}`, '_blank');
                    break;
                default:
                    alert('Reference details not available for this movement type.');
            }
        }

        function exportMovements() {
            const params = new URLSearchParams(window.location.search);
            window.location.href = '@Url.Action("ExportInventoryMovements", "Admin")?' + params.toString();
        }
    </script>
}