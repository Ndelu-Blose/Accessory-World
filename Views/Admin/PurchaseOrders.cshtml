@model List<AccessoryWorld.ViewModels.PurchaseOrderViewModel>
@{
    ViewData["Title"] = "Purchase Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --admin-primary: #2c3e50;
        --admin-secondary: #34495e;
        --admin-accent: #3498db;
        --admin-success: #27ae60;
        --admin-warning: #f39c12;
        --admin-danger: #e74c3c;
        --admin-light: #ecf0f1;
        --admin-dark: #2c3e50;
    }

    .admin-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 0;
    }

    .admin-sidebar {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        margin: 20px;
        padding: 0;
        height: calc(100vh - 40px);
        overflow-y: auto;
    }

    .admin-sidebar-header {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
        padding: 25px 20px;
        border-radius: 15px 15px 0 0;
        text-align: center;
    }

    .admin-sidebar-header h4 {
        margin: 0;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .admin-nav {
        padding: 20px 0;
    }

    .admin-nav-item {
        margin: 0 15px 8px 15px;
    }

    .admin-nav-link {
        display: flex;
        align-items: center;
        padding: 12px 20px;
        color: var(--admin-dark);
        text-decoration: none;
        border-radius: 10px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .admin-nav-link:hover {
        background: linear-gradient(135deg, var(--admin-accent), #5dade2);
        color: white;
        transform: translateX(5px);
    }

    .admin-nav-link.active {
        background: linear-gradient(135deg, var(--admin-primary), var(--admin-secondary));
        color: white;
    }

    .admin-nav-link i {
        width: 20px;
        margin-right: 12px;
        text-align: center;
    }

    .admin-content {
        padding: 20px;
    }

    .admin-content-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        border: none;
        margin-bottom: 20px;
    }

    .status-badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
    }

    .status-draft { background-color: #6c757d; }
    .status-pending { background-color: #ffc107; color: #000; }
    .status-approved { background-color: #0d6efd; }
    .status-ordered { background-color: #fd7e14; }
    .status-received { background-color: #198754; }
    .status-cancelled { background-color: #dc3545; }

    .priority-high { border-left: 4px solid #dc3545; }
    .priority-medium { border-left: 4px solid #ffc107; }
    .priority-low { border-left: 4px solid #198754; }
</style>

<div class="admin-container">
    <div class="row g-0">
        <!-- Sidebar -->
        <div class="col-md-3">
            <div class="admin-sidebar">
                <div class="admin-sidebar-header">
                    <h4><i class="fas fa-tachometer-alt me-2"></i>Admin Panel</h4>
                </div>
                <nav class="admin-nav">
                    <ul class="list-unstyled mb-0">
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Dashboard", "Admin")" class="admin-nav-link">
                                <i class="fas fa-home"></i>
                                <span>Dashboard</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Orders", "Admin")" class="admin-nav-link">
                                <i class="fas fa-shopping-cart"></i>
                                <span>Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Products", "Admin")" class="admin-nav-link">
                                <i class="fas fa-box"></i>
                                <span>Products</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Users", "Admin")" class="admin-nav-link">
                                <i class="fas fa-users"></i>
                                <span>Users</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Inventory", "Admin")" class="admin-nav-link">
                                <i class="fas fa-warehouse"></i>
                                <span>Inventory</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("PurchaseOrders", "Admin")" class="admin-nav-link active">
                                <i class="fas fa-file-invoice"></i>
                                <span>Purchase Orders</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Reports", "Admin")" class="admin-nav-link">
                                <i class="fas fa-chart-bar"></i>
                                <span>Reports</span>
                            </a>
                        </li>
                        <li class="admin-nav-item">
                            <a href="@Url.Action("Settings", "Admin")" class="admin-nav-link">
                                <i class="fas fa-cog"></i>
                                <span>Settings</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="admin-content">
                <div class="admin-content-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h2 class="mb-0">Purchase Orders</h2>
                            <div class="btn-toolbar">
                                <button type="button" class="btn btn-success me-2" onclick="exportPurchaseOrders()">
                                    <i class="fas fa-download"></i> Export
                                </button>
                                <button class="btn btn-primary" onclick="createPurchaseOrder()">
                                    <i class="fas fa-plus"></i> Create Purchase Order
                                </button>
                            </div>
                        </div>

                        <!-- Purchase Order Stats -->
                        <div class="row mb-4">
                            <div class="col-md-2">
                                <div class="card text-white bg-secondary">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.DraftOrders</h4>
                                                <p class="card-text">Draft</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-edit fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-warning">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.PendingOrders</h4>
                                                <p class="card-text">Pending</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-clock fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-primary">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.ApprovedOrders</h4>
                                                <p class="card-text">Approved</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-check fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-info">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.OrderedOrders</h4>
                                                <p class="card-text">Ordered</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-shipping-fast fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-success">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.ReceivedOrders</h4>
                                                <p class="card-text">Received</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-box-open fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="card text-white bg-danger">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <div>
                                                <h4 class="card-title">@ViewBag.CancelledOrders</h4>
                                                <p class="card-text">Cancelled</p>
                                            </div>
                                            <div class="align-self-center">
                                                <i class="fas fa-times fa-2x"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Search and Filter Bar -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <form method="get" class="row g-3">
                                    <div class="col-md-3">
                                        <input type="text" class="form-control" name="search" placeholder="Search PO Number, Supplier..." value="@ViewBag.SearchTerm">
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-select" name="status">
                                            <option value="">All Status</option>
                                            <option value="draft" selected="@(ViewBag.StatusFilter == "draft")">Draft</option>
                                            <option value="pending" selected="@(ViewBag.StatusFilter == "pending")">Pending</option>
                                            <option value="approved" selected="@(ViewBag.StatusFilter == "approved")">Approved</option>
                                            <option value="ordered" selected="@(ViewBag.StatusFilter == "ordered")">Ordered</option>
                                            <option value="received" selected="@(ViewBag.StatusFilter == "received")">Received</option>
                                            <option value="cancelled" selected="@(ViewBag.StatusFilter == "cancelled")">Cancelled</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2">
                                        <select class="form-select" name="priority">
                                            <option value="">All Priorities</option>
                                            <option value="high" selected="@(ViewBag.PriorityFilter == "high")">High</option>
                                            <option value="medium" selected="@(ViewBag.PriorityFilter == "medium")">Medium</option>
                                            <option value="low" selected="@(ViewBag.PriorityFilter == "low")">Low</option>
                                        </select>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="date" class="form-control" name="dateFrom" value="@ViewBag.DateFrom">
                                    </div>
                                    <div class="col-md-3">
                                        <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-filter me-1"></i>Filter
                    </button>
                                        <a href="@Url.Action("PurchaseOrders")" class="btn btn-outline-secondary">
                    <i class="fas fa-times me-1"></i>Clear
                </a>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <!-- Purchase Orders Table -->
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>PO Number</th>
                                                <th>Supplier</th>
                                                <th>Created Date</th>
                                                <th>Expected Date</th>
                                                <th>Total Amount</th>
                                                <th>Items</th>
                                                <th>Priority</th>
                                                <th>Status</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model != null)
                                            {
                                                @foreach (var po in Model)
                                                {
                                                    <tr class="priority-@po.Priority.ToLower()">
                                                        <td>
                                                            <strong>@po.PONumber</strong>
                                                        </td>
                                                        <td>
                                                            <div>
                                                                <strong>@po.SupplierName</strong><br>
                                                                <small class="text-muted">@po.SupplierEmail</small>
                                                            </div>
                                                        </td>
                                                        <td>@po.CreatedDate.ToString("dd/MM/yyyy")</td>
                                                        <td>
                                                            @if (po.ExpectedDeliveryDate.HasValue)
                                                            {
                                                                @po.ExpectedDeliveryDate.Value.ToString("dd/MM/yyyy")
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">Not set</span>
                                                            }
                                                        </td>
                                                        <td>
                                                            <strong>R @po.TotalAmount.ToString("N2")</strong>
                                                        </td>
                                                        <td>
                                                            <span class="badge bg-info">@po.ItemCount items</span>
                                                        </td>
                                                        <td>
                                                            <span class="badge bg-@(po.Priority.ToLower() == "high" ? "danger" : po.Priority.ToLower() == "medium" ? "warning" : "success")">@po.Priority</span>
                                                        </td>
                                                        <td>
                                                            <span class="badge status-@po.Status.ToLower() status-badge">@po.Status</span>
                                                        </td>
                                                        <td>
                                                            <div class="btn-group" role="group">
                                                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="viewPurchaseOrder('@po.Id')" title="View Details">
                                                                    <i class="fas fa-eye"></i>
                                                                </button>
                                                                @if (po.Status.ToLower() == "draft" || po.Status.ToLower() == "pending")
                                                                {
                                                                    <button type="button" class="btn btn-sm btn-outline-success" onclick="editPurchaseOrder('@po.Id')" title="Edit">
                                                                        <i class="fas fa-edit"></i>
                                                                    </button>
                                                                }
                                                                @if (po.Status.ToLower() == "ordered")
                                                                {
                                                                    <button type="button" class="btn btn-sm btn-outline-info" onclick="receivePurchaseOrder('@po.Id')" title="Receive Items">
                                                                        <i class="fas fa-truck"></i>
                                                                    </button>
                                                                }
                                                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="printPurchaseOrder('@po.Id')" title="Print">
                                                                    <i class="fas fa-print"></i>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                @if (Model == null || !Model.Any())
                                {
                                    <div class="text-center py-4">
                                        <i class="fas fa-file-invoice fa-3x text-muted mb-3"></i>
                                        <h5 class="text-muted">No purchase orders found</h5>
                                        <p class="text-muted">Create your first purchase order to start restocking inventory.</p>
                                        <button class="btn btn-primary" onclick="createPurchaseOrder()">
                                            <i class="fas fa-plus"></i> Create Purchase Order
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Pagination -->
                        @if (ViewBag.TotalPages > 1)
                        {
                            <nav aria-label="Purchase Orders pagination" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    @if (ViewBag.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&priority=@ViewBag.PriorityFilter&dateFrom=@ViewBag.DateFrom">Previous</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="?page=@i&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&priority=@ViewBag.PriorityFilter&dateFrom=@ViewBag.DateFrom">@i</a>
                                        </li>
                                    }

                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.SearchTerm&status=@ViewBag.StatusFilter&priority=@ViewBag.PriorityFilter&dateFrom=@ViewBag.DateFrom">Next</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Purchase Order Details Modal -->
<div class="modal fade" id="purchaseOrderModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Purchase Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="purchaseOrderContent">
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="editPOBtn" style="display: none;" onclick="editCurrentPO()">
                    <i class="fas fa-edit me-1"></i>Edit
                </button>
                <button type="button" class="btn btn-success" id="approvePOBtn" style="display: none;" onclick="approvePO()">
                    <i class="fas fa-check me-1"></i>Approve
                </button>
                <button type="button" class="btn btn-info" id="orderPOBtn" style="display: none;" onclick="orderPO()">
                    <i class="fas fa-paper-plane me-1"></i>Send to Supplier
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Receive Items Modal -->
<div class="modal fade" id="receiveItemsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Receive Purchase Order Items</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="receiveItemsContent">
                    <div class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="submitReceiveItems()">
                    <i class="fas fa-box me-1"></i>Receive Items
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPOId = null;

        function createPurchaseOrder() {
            window.location.href = '@Url.Action("CreatePurchaseOrder", "Admin")';
        }

        function viewPurchaseOrder(poId) {
            currentPOId = poId;
            const modal = new bootstrap.Modal(document.getElementById('purchaseOrderModal'));
            modal.show();

            fetch(`@Url.Action("GetPurchaseOrderDetails")?id=${poId}`)
                .then(response => response.json())
                .then(data => {
                    displayPurchaseOrderDetails(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('purchaseOrderContent').innerHTML = '<p class="text-danger text-center">Error loading purchase order details.</p>';
                });
        }

        function displayPurchaseOrderDetails(po) {
            const canEdit = po.status.toLowerCase() === 'draft' || po.status.toLowerCase() === 'pending';
            const canApprove = po.status.toLowerCase() === 'pending';
            const canOrder = po.status.toLowerCase() === 'approved';

            document.getElementById('editPOBtn').style.display = canEdit ? 'inline-block' : 'none';
            document.getElementById('approvePOBtn').style.display = canApprove ? 'inline-block' : 'none';
            document.getElementById('orderPOBtn').style.display = canOrder ? 'inline-block' : 'none';

            let itemsHtml = '';
            po.items.forEach(item => {
                itemsHtml += `
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                ${item.imageUrl ? `<img src="${item.imageUrl}" alt="${item.productName}" class="me-2" style="width: 40px; height: 40px; object-fit: cover;">` : ''}
                                <div>
                                    <strong>${item.productName}</strong><br>
                                    <small class="text-muted">SKU: ${item.skuCode}</small>
                                </div>
                            </div>
                        </td>
                        <td>${item.requestedQuantity}</td>
                        <td>R ${item.unitCost.toFixed(2)}</td>
                        <td>R ${item.totalCost.toFixed(2)}</td>
                        <td>${item.receivedQuantity || 0}</td>
                        <td>${item.notes || ''}</td>
                    </tr>
                `;
            });

            const html = `
                <div class="row">
                    <div class="col-md-6">
                        <h6>Purchase Order Information</h6>
                        <table class="table table-sm">
                            <tr><td><strong>PO Number:</strong></td><td>${po.poNumber}</td></tr>
                            <tr><td><strong>Status:</strong></td><td><span class="badge status-${po.status.toLowerCase()} status-badge">${po.status}</span></td></tr>
                            <tr><td><strong>Priority:</strong></td><td><span class="badge bg-${po.priority.toLowerCase() === 'high' ? 'danger' : po.priority.toLowerCase() === 'medium' ? 'warning' : 'success'}">${po.priority}</span></td></tr>
                            <tr><td><strong>Created Date:</strong></td><td>${new Date(po.createdDate).toLocaleDateString()}</td></tr>
                            <tr><td><strong>Expected Delivery:</strong></td><td>${po.expectedDeliveryDate ? new Date(po.expectedDeliveryDate).toLocaleDateString() : 'Not set'}</td></tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Supplier Information</h6>
                        <table class="table table-sm">
                            <tr><td><strong>Name:</strong></td><td>${po.supplierName}</td></tr>
                            <tr><td><strong>Email:</strong></td><td>${po.supplierEmail}</td></tr>
                            <tr><td><strong>Phone:</strong></td><td>${po.supplierPhone || 'N/A'}</td></tr>
                            <tr><td><strong>Address:</strong></td><td>${po.supplierAddress || 'N/A'}</td></tr>
                        </table>
                    </div>
                </div>
                <hr>
                <h6>Order Items</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Requested Qty</th>
                                <th>Unit Cost</th>
                                <th>Total Cost</th>
                                <th>Received Qty</th>
                                <th>Notes</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${itemsHtml}
                        </tbody>
                        <tfoot>
                            <tr class="table-dark">
                                <th colspan="3">Total Amount:</th>
                                <th>R ${po.totalAmount.toFixed(2)}</th>
                                <th colspan="2"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                ${po.notes ? `<div class="mt-3"><h6>Notes:</h6><p>${po.notes}</p></div>` : ''}
            `;

            document.getElementById('purchaseOrderContent').innerHTML = html;
        }

        function editPurchaseOrder(poId) {
            window.location.href = `@Url.Action("EditPurchaseOrder", "Admin")?id=${poId}`;
        }

        function editCurrentPO() {
            if (currentPOId) {
                editPurchaseOrder(currentPOId);
            }
        }

        function approvePO() {
            if (currentPOId && confirm('Are you sure you want to approve this purchase order?')) {
                updatePOStatus(currentPOId, 'approved');
            }
        }

        function orderPO() {
            if (currentPOId && confirm('Are you sure you want to send this purchase order to the supplier?')) {
                updatePOStatus(currentPOId, 'ordered');
            }
        }

        function updatePOStatus(poId, status) {
            fetch('@Url.Action("UpdatePurchaseOrderStatus")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: poId, status: status })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`Purchase order ${status} successfully!`);
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the purchase order.');
                });
        }

        function receivePurchaseOrder(poId) {
            const modal = new bootstrap.Modal(document.getElementById('receiveItemsModal'));
            modal.show();

            fetch(`@Url.Action("GetPurchaseOrderForReceiving")?id=${poId}`)
                .then(response => response.json())
                .then(data => {
                    displayReceiveItemsForm(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('receiveItemsContent').innerHTML = '<p class="text-danger text-center">Error loading purchase order for receiving.</p>';
                });
        }

        function displayReceiveItemsForm(po) {
            let itemsHtml = '';
            po.items.forEach((item, index) => {
                const remainingQty = item.requestedQuantity - (item.receivedQuantity || 0);
                if (remainingQty > 0) {
                    itemsHtml += `
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    ${item.imageUrl ? `<img src="${item.imageUrl}" alt="${item.productName}" class="me-2" style="width: 40px; height: 40px; object-fit: cover;">` : ''}
                                    <div>
                                        <strong>${item.productName}</strong><br>
                                        <small class="text-muted">SKU: ${item.skuCode}</small>
                                    </div>
                                </div>
                                <input type="hidden" name="items[${index}].SKUId" value="${item.skuId}">
                                <input type="hidden" name="items[${index}].ProductName" value="${item.productName}">
                            </td>
                            <td>${item.requestedQuantity}</td>
                            <td>${item.receivedQuantity || 0}</td>
                            <td>${remainingQty}</td>
                            <td>
                                <input type="number" class="form-control" name="items[${index}].ReceivingQuantity" min="0" max="${remainingQty}" value="${remainingQty}" required>
                            </td>
                            <td>
                                <input type="text" class="form-control" name="items[${index}].Notes" placeholder="Optional notes...">
                            </td>
                        </tr>
                    `;
                }
            });

            const html = `
                <form id="receiveItemsForm">
                    <input type="hidden" name="PurchaseOrderId" value="${po.id}">
                    <div class="mb-3">
                        <label class="form-label">Delivery Date</label>
                        <input type="date" class="form-control" name="DeliveryDate" value="${new Date().toISOString().split('T')[0]}" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Delivery Reference</label>
                        <input type="text" class="form-control" name="DeliveryReference" placeholder="Invoice number, delivery note, etc.">
                    </div>
                    <h6>Items to Receive</h6>
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Ordered</th>
                                    <th>Previously Received</th>
                                    <th>Remaining</th>
                                    <th>Receiving Now</th>
                                    <th>Notes</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${itemsHtml}
                            </tbody>
                        </table>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">General Notes</label>
                        <textarea class="form-control" name="Notes" rows="3" placeholder="Any additional notes about this delivery..."></textarea>
                    </div>
                </form>
            `;

            document.getElementById('receiveItemsContent').innerHTML = html;
        }

        function submitReceiveItems() {
            const form = document.getElementById('receiveItemsForm');
            const formData = new FormData(form);

            fetch('@Url.Action("ReceivePurchaseOrderItems")', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Items received successfully!');
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while receiving items.');
                });
        }

        function printPurchaseOrder(poId) {
            window.open(`@Url.Action("PrintPurchaseOrder")?id=${poId}`, '_blank');
        }

        function exportPurchaseOrders() {
            window.location.href = '@Url.Action("ExportPurchaseOrders", "Admin")';
        }
    </script>
}